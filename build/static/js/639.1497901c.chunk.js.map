{"version":3,"file":"static/js/639.1497901c.chunk.js","mappings":"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","sources":["components/hook-form/FormProvider.js","components/Image/Image.js","components/upload/preview/AvatarPreview.js","components/upload/UploadAvatar.js","components/hook-form/RHFUpload.js","components/hook-form/RHFTextField.js","../node_modules/phosphor-react/src/icons/GoogleLogo.tsx","../node_modules/phosphor-react/src/icons/GithubLogo.tsx","../node_modules/phosphor-react/src/icons/TwitterLogo.tsx","sections/auth/AuthSocial.js"],"sourcesContent":["import PropTypes from 'prop-types';\n// form\nimport { FormProvider as Form } from 'react-hook-form';\n\n// ----------------------------------------------------------------------\n\nFormProvider.propTypes = {\n  children: PropTypes.node,\n  methods: PropTypes.object,\n  onSubmit: PropTypes.func,\n};\n\nexport default function FormProvider({ children, onSubmit, methods }) {\n  return (\n    <Form {...methods}>\n      <form onSubmit={onSubmit}>{children}</form>\n    </Form>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n// @mui\nimport { Box } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst Image = forwardRef(\n  ({ disabledEffect = false, effect = 'blur', sx, ...other }, ref) => {\n    const content = (\n      <Box\n        component={LazyLoadImage}\n        wrapperClassName=\"wrapper\"\n        effect={disabledEffect ? undefined : effect}\n        placeholderSrc={disabledEffect ? '/assets/transparent.png' : '/assets/placeholder.svg'}\n        sx={{ width: 1, height: 1, objectFit: 'cover' }}\n        {...other}\n      />\n    );\n\n    return (\n      <Box\n        ref={ref}\n        component=\"span\"\n        sx={{\n          lineHeight: 1,\n          display: 'block',\n          overflow: 'hidden',\n          position: 'relative',\n          '& .wrapper': {\n            width: 1,\n            height: 1,\n            backgroundSize: 'cover !important',\n          },\n          ...sx,\n        }}\n      >\n        {content}\n      </Box>\n    );\n  }\n);\n\nImage.propTypes = {\n  sx: PropTypes.object,\n  effect: PropTypes.string,\n  disabledEffect: PropTypes.bool,\n};\n\nexport default Image;\n","import PropTypes from 'prop-types';\n//\nimport Image from '../../Image';\n\n// ----------------------------------------------------------------------\n\nAvatarPreview.propTypes = {\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nexport default function AvatarPreview({ file }) {\n  if (!file) {\n    return null;\n  }\n\n  const imgUrl = typeof file === 'string' ? file : file.preview;\n\n  return (\n    <Image\n      alt=\"avatar\"\n      src={imgUrl}\n      sx={{\n        zIndex: 8,\n        overflow: 'hidden',\n        borderRadius: '50%',\n        position: 'absolute',\n        width: `calc(100% - 16px)`,\n        height: `calc(100% - 16px)`,\n      }}\n    />\n  );\n}\n","import PropTypes from \"prop-types\";\nimport { useDropzone } from \"react-dropzone\";\n// @mui\nimport { Typography } from \"@mui/material\";\nimport { styled, alpha } from \"@mui/material/styles\";\n//\nimport AvatarPreview from \"./preview/AvatarPreview\";\nimport { Image } from \"phosphor-react\";\n\n// ----------------------------------------------------------------------\n\nconst StyledDropZone = styled(\"div\")(({ theme }) => ({\n  width: 144,\n  height: 144,\n  margin: \"auto\",\n  display: \"flex\",\n  cursor: \"pointer\",\n  overflow: \"hidden\",\n  borderRadius: \"50%\",\n  alignItems: \"center\",\n  position: \"relative\",\n  justifyContent: \"center\",\n  border: `1px dashed ${alpha(theme.palette.grey[500], 0.32)}`,\n}));\n\nconst StyledPlaceholder = styled(\"div\")(({ theme }) => ({\n  zIndex: 7,\n  display: \"flex\",\n  borderRadius: \"50%\",\n  position: \"absolute\",\n  alignItems: \"center\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  width: `calc(100% - 16px)`,\n  height: `calc(100% - 16px)`,\n  color: theme.palette.text.disabled,\n  backgroundColor: theme.palette.background.neutral,\n  transition: theme.transitions.create(\"opacity\", {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter,\n  }),\n}));\n\n// ----------------------------------------------------------------------\n\nUploadAvatar.propTypes = {\n  sx: PropTypes.object,\n  error: PropTypes.bool,\n  disabled: PropTypes.bool,\n  helperText: PropTypes.node,\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nexport default function UploadAvatar({\n  error,\n  file,\n  disabled,\n  helperText,\n  sx,\n  ...other\n}) {\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragReject,\n  } = useDropzone({\n    multiple: false,\n    disabled,\n    ...other,\n  });\n\n  const hasFile = !!file;\n\n  const isError = isDragReject || !!error;\n\n  return (\n    <>\n      <StyledDropZone\n        {...getRootProps()}\n        sx={{\n          ...(isDragActive && {\n            opacity: 0.72,\n          }),\n          ...(isError && {\n            borderColor: \"error.light\",\n            ...(hasFile && {\n              bgcolor: \"error.lighter\",\n            }),\n          }),\n          ...(disabled && {\n            opacity: 0.48,\n            pointerEvents: \"none\",\n          }),\n          ...(hasFile && {\n            \"&:hover\": {\n              \"& .placeholder\": {\n                opacity: 1,\n              },\n            },\n          }),\n          ...sx,\n        }}\n      >\n        <input {...getInputProps()} />\n\n        {hasFile && <AvatarPreview file={file} />}\n\n        <StyledPlaceholder\n          className=\"placeholder\"\n          sx={{\n            \"&:hover\": {\n              opacity: 0.72,\n            },\n            ...(hasFile && {\n              zIndex: 9,\n              opacity: 0,\n              color: \"common.white\",\n              bgcolor: (theme) => alpha(theme.palette.grey[900], 0.64),\n            }),\n            ...(isError && {\n              color: \"error.main\",\n              bgcolor: \"error.lighter\",\n            }),\n          }}\n        >\n          <Image />\n\n          <Typography variant=\"caption\">\n            {file ? \"Update photo\" : \"Upload photo\"}\n          </Typography>\n        </StyledPlaceholder>\n      </StyledDropZone>\n\n      {helperText && helperText}\n    </>\n  );\n}","import PropTypes from 'prop-types';\n// form\nimport { useFormContext, Controller } from 'react-hook-form';\n// @mui\nimport { FormHelperText } from '@mui/material';\n//\nimport { UploadAvatar } from '../upload';\n\n// ----------------------------------------------------------------------\n\nRHFUploadAvatar.propTypes = {\n  name: PropTypes.string,\n};\n\n// ----------------------------------------------------------------------\n\nexport function RHFUploadAvatar({ name, ...other }) {\n  const { control } = useFormContext();\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field, fieldState: { error } }) => (\n        <div>\n          <UploadAvatar\n            accept={{\n              'image/*': [],\n            }}\n            error={!!error}\n            file={field.value}\n            {...other}\n          />\n\n          {!!error && (\n            <FormHelperText error sx={{ px: 2, textAlign: 'center' }}>\n              {error.message}\n            </FormHelperText>\n          )}\n        </div>\n      )}\n    />\n  );\n}\n\n","import PropTypes from 'prop-types';\n// form\nimport { useFormContext, Controller } from 'react-hook-form';\n// @mui\nimport { TextField } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nRHFTextField.propTypes = {\n  name: PropTypes.string,\n  helperText: PropTypes.node,\n};\n\nexport default function RHFTextField({ name, helperText, ...other }) {\n  const { control } = useFormContext();\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field, fieldState: { error } }) => (\n        <TextField\n          {...field}\n          fullWidth\n          \n          value={typeof field.value === 'number' && field.value === 0 ? '' : field.value}\n          error={!!error}\n          helperText={error ? error?.message : helperText}\n          {...other}\n        />\n      )}\n    />\n  );\n}\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M128,128h88a88.1,88.1,0,1,1-25.8-62.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M128,128h88a88.1,88.1,0,1,1-25.8-62.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M128,24A104,104,0,1,0,232,128,104.2,104.2,0,0,0,128,24Zm0,184A80,80,0,1,1,184.6,71.4a8,8,0,0,1,0,11.3,7.9,7.9,0,0,1-11.3,0A64.1,64.1,0,1,0,191.5,136H128a8,8,0,0,1,0-16h72a8,8,0,0,1,8,8A80.1,80.1,0,0,1,128,208Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M128,128h88a88.1,88.1,0,1,1-25.8-62.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M128,128h88a88.1,88.1,0,1,1-25.8-62.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M128,128h88a88.1,88.1,0,1,1-25.8-62.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst GoogleLogo = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nGoogleLogo.displayName = \"GoogleLogo\";\n\nexport default GoogleLogo;\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M84,240a23.9,23.9,0,0,0,24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M172,240a23.9,23.9,0,0,1-24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M152,168h16a23.9,23.9,0,0,1,24,24v8a23.9,23.9,0,0,0,24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M104,168H88a23.9,23.9,0,0,0-24,24v8a23.9,23.9,0,0,1-24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      opacity=\"0.2\"\n    />\n    <path\n      d=\"M84,240a23.9,23.9,0,0,0,24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M172,240a23.9,23.9,0,0,1-24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M152,168h16a23.9,23.9,0,0,1,24,24v8a23.9,23.9,0,0,0,24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M104,168H88a23.9,23.9,0,0,0-24,24v8a23.9,23.9,0,0,1-24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M224,224a8,8,0,0,1-8,8,32.1,32.1,0,0,1-32-32v-8a16,16,0,0,0-16-16H156v40a16,16,0,0,0,16,16,8,8,0,0,1,0,16,32.1,32.1,0,0,1-32-32V176H116v40a32.1,32.1,0,0,1-32,32,8,8,0,0,1,0-16,16,16,0,0,0,16-16V176H88a16,16,0,0,0-16,16v8a32.1,32.1,0,0,1-32,32,8,8,0,0,1,0-16,16,16,0,0,0,16-16v-8a32.1,32.1,0,0,1,14.8-27A55.8,55.8,0,0,1,48,120v-8a58,58,0,0,1,7.7-28.3A59.9,59.9,0,0,1,61.1,36,7.8,7.8,0,0,1,68,32a59.7,59.7,0,0,1,48,24h24a59.7,59.7,0,0,1,48-24,7.8,7.8,0,0,1,6.9,4,59.9,59.9,0,0,1,5.4,47.7A58,58,0,0,1,208,112v8a55.8,55.8,0,0,1-22.8,45A32.1,32.1,0,0,1,200,192v8a16,16,0,0,0,16,16A8,8,0,0,1,224,224Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M84,240a23.9,23.9,0,0,0,24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M172,240a23.9,23.9,0,0,1-24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M152,168h16a23.9,23.9,0,0,1,24,24v8a23.9,23.9,0,0,0,24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M104,168H88a23.9,23.9,0,0,0-24,24v8a23.9,23.9,0,0,1-24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M84,240a23.9,23.9,0,0,0,24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M172,240a23.9,23.9,0,0,1-24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M152,168h16a23.9,23.9,0,0,1,24,24v8a23.9,23.9,0,0,0,24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M104,168H88a23.9,23.9,0,0,0-24,24v8a23.9,23.9,0,0,1-24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M84,240a23.9,23.9,0,0,0,24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M172,240a23.9,23.9,0,0,1-24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M152,168h16a23.9,23.9,0,0,1,24,24v8a23.9,23.9,0,0,0,24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M104,168H88a23.9,23.9,0,0,0-24,24v8a23.9,23.9,0,0,1-24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst GithubLogo = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nGithubLogo.displayName = \"GithubLogo\";\n\nexport default GithubLogo;\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      opacity=\"0.2\"\n    />\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M245.7,77.7l-30.2,30.1C209.5,177.7,150.5,232,80,232c-14.5,0-26.5-2.3-35.6-6.8-7.3-3.7-10.3-7.6-11.1-8.8a8,8,0,0,1,3.9-11.9c.2-.1,23.8-9.1,39.1-26.4a108.6,108.6,0,0,1-24.7-24.4c-13.7-18.6-28.2-50.9-19.5-99.1a8.1,8.1,0,0,1,5.5-6.2,8,8,0,0,1,8.1,1.9c.3.4,33.6,33.2,74.3,43.8V88a48.3,48.3,0,0,1,48.6-48,48.2,48.2,0,0,1,41,24H240a8,8,0,0,1,7.4,4.9A8.4,8.4,0,0,1,245.7,77.7Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst TwitterLogo = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nTwitterLogo.displayName = \"TwitterLogo\";\n\nexport default TwitterLogo;\n","// @mui\nimport { Divider, IconButton, Stack } from '@mui/material';\nimport { GithubLogo, GoogleLogo, TwitterLogo } from 'phosphor-react';\n\n// ----------------------------------------------------------------------\n\nexport default function AuthSocial() {\n\n\n  const handleGoogleLogin = async () => {\n\n  };\n\n  const handleGithubLogin = async () => {\n    \n  };\n\n  const handleTwitterLogin = async () => {\n    \n  };\n\n  return (\n    <div>\n      <Divider\n        sx={{\n          my: 2.5,\n          typography: 'overline',\n          color: 'text.disabled',\n          '&::before, ::after': {\n            borderTopStyle: 'dashed',\n          },\n        }}\n      >\n        OR\n      </Divider>\n\n      <Stack direction=\"row\" justifyContent=\"center\" spacing={2}>\n        <IconButton onClick={handleGoogleLogin}>\n          <GoogleLogo color=\"#DF3E30\" />\n        </IconButton>\n\n        <IconButton color=\"inherit\" onClick={handleGithubLogin}>\n          <GithubLogo />\n        </IconButton>\n\n        <IconButton onClick={handleTwitterLogin}>\n          <TwitterLogo color=\"#1C9CEA\" />\n        </IconButton>\n      </Stack>\n    </div>\n  );\n}\n"],"names":["FormProvider","children","onSubmit","methods","forwardRef","ref","disabledEffect","effect","sx","other","content","Box","component","LazyLoadImage","wrapperClassName","undefined","placeholderSrc","width","height","objectFit","lineHeight","display","overflow","position","backgroundSize","AvatarPreview","file","imgUrl","preview","alt","src","zIndex","borderRadius","StyledDropZone","styled","theme","margin","cursor","alignItems","justifyContent","border","alpha","palette","grey","StyledPlaceholder","flexDirection","color","text","disabled","backgroundColor","background","neutral","transition","transitions","create","easing","easeInOut","duration","shorter","UploadAvatar","error","helperText","useDropzone","multiple","getRootProps","getInputProps","isDragActive","hasFile","isError","isDragReject","opacity","borderColor","bgcolor","pointerEvents","className","Typography","variant","RHFUploadAvatar","name","control","useFormContext","render","field","fieldState","accept","value","FormHelperText","px","textAlign","message","RHFTextField","TextField","fullWidth","pathsByWeight","Map","set","React","d","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","renderPath","weight","renderPathForWeight","GoogleLogo","props","IconBase","displayName","GithubLogo","TwitterLogo","AuthSocial","handleGoogleLogin","handleGithubLogin","handleTwitterLogin","Divider","my","typography","borderTopStyle","Stack","direction","spacing","IconButton","onClick"],"sourceRoot":""}