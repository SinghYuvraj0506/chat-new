{"version":3,"file":"static/js/977.1e4e91cd.chunk.js","mappings":"mdAuBMA,GAAcC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAc,gBAAGE,EAAH,EAAGA,MAAH,MAAgB,CAChD,oBAAqB,CACnBC,gBAAiB,UACjBC,MAAO,UACPC,UAAU,aAAD,OAAeH,EAAMI,QAAQC,WAAWC,OACjD,WAAY,CACVC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,MAAO,OACPC,OAAQ,OACRC,aAAc,MACdC,UAAW,mCACXC,OAAQ,yBACRC,QAAS,OAGb,oBAAqB,CACnB,KAAM,CACJC,UAAW,YACXC,QAAS,GAEX,OAAQ,CACND,UAAW,aACXC,QAAS,IAxBmB,IA6B5BC,EAAoB,CACxB,CACEC,MAAO,gBAET,CACEA,MAAO,sBAET,CACEA,MAAO,kBAET,CACEA,MAAO,gBAuJX,EAnJmB,WACjB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,GAAc,UAAW,KAAM,KAAM,MAChDvB,GAAQwB,EAAAA,EAAAA,KAEPC,GAAwBC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,aAAaC,WAA9B,IAApCJ,qBAEP,EACEK,EAAAA,SAAe,MADjB,eAAOC,EAAP,KAAiCC,EAAjC,KAEMC,EAAuBC,QAAQH,GAI/BI,EAA8B,WAClCH,EAA4B,KAC7B,EAED,OACE,+BACE,SAACI,EAAA,EAAD,CACEC,EAAG,EACH3B,MAAO,OACP4B,GAAI,CACFrC,gBACyB,UAAvBD,EAAMI,QAAQmC,KACV,UACAvC,EAAMI,QAAQC,WACpBF,UAAW,mCARf,UAWE,UAACqC,EAAA,EAAD,CACEC,WAAY,SACZC,UAAW,MACXJ,GAAI,CAAE5B,MAAO,OAAQC,OAAQ,QAC7BgC,eAAe,gBAJjB,WAME,UAACH,EAAA,EAAD,CACEI,QAAS,WACPxB,GAASyB,EAAAA,EAAAA,MACV,EACDC,QAAS,EACTJ,UAAU,MALZ,WAOE,SAACN,EAAA,EAAD,WACE,SAACvC,EAAD,CACEkD,QAAQ,WACRC,aAAc,CACZC,SAAU,SACVC,WAAY,SAEdC,QAAQ,MANV,UAQE,SAACC,EAAA,EAAD,CACEC,IAAG,OAAE5B,QAAF,IAAEA,OAAF,EAAEA,EAAsB6B,KAC3BC,IAAG,OAAE9B,QAAF,IAAEA,OAAF,EAAEA,EAAsB+B,WAIjC,UAAChB,EAAA,EAAD,CAAOM,QAAS,GAAhB,WACE,SAACW,EAAA,EAAD,CAAYN,QAAQ,YAApB,gBACG1B,QADH,IACGA,OADH,EACGA,EAAsB6B,QAEzB,SAACG,EAAA,EAAD,CAAYN,QAAQ,UAApB,2BAGJ,UAACX,EAAA,EAAD,CACEE,UAAW,MACXD,WAAW,SACXK,QAASxB,EAAW,EAAI,EAH1B,WAKE,SAACoC,EAAA,EAAD,CAAYd,QAAS,WACnBxB,GAASuC,EAAAA,EAAAA,IAAelC,EAAqBmC,SAC9C,EAFD,UAGE,SAAC,IAAD,OAEF,SAACF,EAAA,EAAD,CACEd,QAAS,WAEPxB,GAASyC,EAAAA,EAAAA,IAAepC,EAAqBmC,SAC9C,EAJH,UAME,SAAC,IAAD,OAEAtC,IACA,SAACoC,EAAA,EAAD,WACE,SAAC,IAAD,OAGJ,SAACI,EAAA,EAAD,CAASC,YAAY,WAAWC,UAAQ,KACxC,SAACN,EAAA,EAAD,CACEO,GAAG,iCACH,gBACEhC,EACI,oCACAiC,EAEN,gBAAc,OACd,gBAAejC,EAAuB,YAASiC,EAC/CtB,QAxFwB,SAACuB,GACnCnC,EAA4BmC,EAAMC,cACnC,EA6ES,UAWE,SAAC,IAAD,OAEF,SAACC,EAAA,EAAD,CACEC,cAAe,CACb,kBAAmB,eAErBC,oBAAqBC,EAAAA,EACrBP,GAAG,+BACH,kBAAgB,iCAChBQ,SAAU1C,EACV2C,KAAMzC,EACN0C,QAASxC,EACTa,aAAc,CACZC,SAAU,SACVC,WAAY,SAEd0B,gBAAiB,CACf3B,SAAU,MACVC,WAAY,SAhBhB,UAmBE,SAACd,EAAA,EAAD,CAAKC,EAAG,EAAR,UACE,SAACG,EAAA,EAAD,CAAOM,QAAS,EAAhB,SACG5B,EAAkB2D,KAAI,SAACC,GAAD,OACrB,UAACC,EAAA,EAAD,CAAUnC,QAAST,EAAnB,WACE,SAACK,EAAA,EAAD,CACEF,GAAI,CAAE0C,SAAU,KAChBtC,UAAU,MACVD,WAAY,SACZE,eAAe,gBAJjB,UAME,0BAAOmC,EAAG3D,UACH,MATU,mBAsBxC,E,kKCxLK8D,GAAcnF,EAAAA,EAAAA,IAAOoF,EAAAA,EAAPpF,EAAkB,cAAGE,MAAH,MAAgB,CACpD,wBAAyB,CACvBmF,WAAY,kBACZC,cAAe,mBAHmB,IAOhCC,EAAU,CACd,CACEnF,MAAO,UACPoF,MAAM,SAAC,IAAD,CAAOC,KAAM,KACnBC,EAAG,IACHrE,MAAO,eAET,CACEjB,MAAO,UACPoF,MAAM,SAAC,IAAD,CAASC,KAAM,KACrBC,EAAG,IACHrE,MAAO,YAET,CACEjB,MAAO,UACPoF,MAAM,SAAC,IAAD,CAAQC,KAAM,KACpBC,EAAG,IACHrE,MAAO,SAET,CACEjB,MAAO,UACPoF,MAAM,SAAC,IAAD,CAAMC,KAAM,KAClBC,EAAG,IACHrE,MAAO,YAET,CACEjB,MAAO,UACPoF,MAAM,SAAC,IAAD,CAAMC,KAAM,KAClBC,EAAG,IACHrE,MAAO,YAILsE,EAAY,SAAC,GAMZ,IALLC,EAKI,EALJA,WACAC,EAII,EAJJA,cACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,MACAC,EACI,EADJA,SAEA,EAAsChE,EAAAA,UAAe,GAArD,eAAOiE,EAAP,KAAoBC,EAApB,KAEA,OACE,SAACf,EAAD,CACEa,SAAUA,EACVD,MAAOA,EACPI,SAAU,SAAC9B,GACTyB,EAASzB,EAAM+B,OAAOL,MACvB,EACDM,WAAS,EACTC,YAAY,qBACZjD,QAAQ,SACRkD,WAAY,CACVC,kBAAkB,EAClBC,gBACE,UAAC/D,EAAA,EAAD,CAAOF,GAAI,CAAE5B,MAAO,eAApB,WACE,SAAC8B,EAAA,EAAD,CACEF,GAAI,CACF/B,SAAU,WACViG,QAAST,EAAc,eAAiB,QAH5C,SAMGV,EAAQR,KAAI,SAACC,GAAD,OACX,SAAC2B,EAAA,EAAD,CAASC,UAAU,QAAQvF,MAAO2D,EAAG3D,MAArC,UACE,SAACwF,EAAA,EAAD,CACE/D,QAAS,WACPoD,GAAgBD,EACjB,EACDzD,GAAI,CACF/B,SAAU,WACVC,KAAMsE,EAAGU,EACTvF,gBAAiB6E,EAAG5E,OAEtB,aAAW,MATb,SAWG4E,EAAGQ,QAbG,OAmBf,SAACsB,EAAA,EAAD,WACE,SAAClD,EAAA,EAAD,CACEd,QAAS,WACPoD,GAAgBD,EACjB,EAHH,UAKE,SAAC,IAAD,WAKRc,cACE,SAACrE,EAAA,EAAD,CAAOF,GAAI,CAAE/B,SAAU,YAAvB,UACE,SAACqG,EAAA,EAAD,WACE,SAAClD,EAAA,EAAD,CACEd,QAAS,WACP+C,GAAeD,EAChB,EAHH,UAKE,SAAC,IAAD,YAQf,EAUD,SAASoB,EAAYC,GAEnB,MADiB,uBACDC,KAAKD,EACtB,CAED,IAsHA,EAtHe,WACb,IAAM/G,GAAQwB,EAAAA,EAAAA,KAENC,GAAyBC,EAAAA,EAAAA,KAC/B,SAACC,GAAD,OAAWA,EAAMC,aAAaC,WAA9B,IADMJ,qBAKFmC,EAAUqD,OAAOC,aAAaC,QAAQ,WAEtC7F,GAAWC,EAAAA,EAAAA,GAAc,UAAW,KAAM,KAAM,MAEtD,GAA6BG,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMyF,GAAjB,IAAjCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QAEjB,EAAoCxF,EAAAA,UAAe,GAAnD,eAAO4D,EAAP,KAAmBC,EAAnB,KAEA,GAA0B4B,EAAAA,EAAAA,UAAS,IAAnC,eAAO1B,EAAP,KAAcD,EAAd,KACME,GAAW0B,EAAAA,EAAAA,QAAO,MAoBxB,OACE,SAACpF,EAAA,EAAD,CACEE,GAAI,CACF/B,SAAU,WACVN,gBAAiB,0BAHrB,UAME,SAACmC,EAAA,EAAD,CACEC,EAAGf,EAAW,EAAI,EAClBZ,MAAO,OACP4B,GAAI,CACFrC,gBACyB,UAAvBD,EAAMI,QAAQmC,KACV,UACAvC,EAAMI,QAAQC,WACpBF,UAAW,mCARf,UAWE,UAACqC,EAAA,EAAD,CAAOE,UAAU,MAAMD,WAAY,SAAUK,QAASxB,EAAW,EAAI,EAArE,WACE,UAACkB,EAAA,EAAD,CAAOF,GAAI,CAAE5B,MAAO,QAApB,WACE,SAAC0B,EAAA,EAAD,CACEqF,MAAO,CACLC,OAAQ,GACRnH,SAAU,QACViG,QAASd,EAAa,SAAW,OACjCiC,OAAQ,GACRC,MAAOtG,EAAW,GAAK+F,EAAQ3C,KAAO,IAAM,KANhD,UASE,SAAC,IAAD,CACE1E,MAAOA,EAAMI,QAAQmC,KACrBsF,KAAMA,EACNC,cAAe,SAACC,IAlD9B,SAA0BA,GACxB,IAAMC,EAAQlC,EAASmC,QAEvB,GAAID,EAAO,CACT,IAAME,EAAiBF,EAAME,eACvBC,EAAeH,EAAMG,aAE3BvC,EACEC,EAAMuC,UAAU,EAAGF,GACjBH,EACAlC,EAAMuC,UAAUD,IAIpBH,EAAME,eAAiBF,EAAMG,aAAeD,EAAiB,CAC9D,CACF,CAmCeG,CAAiBN,EAAMO,OACxB,OAIL,SAAC7C,EAAD,CACEK,SAAUA,EACVD,MAAOA,EACPD,SAAUA,EACVF,WAAYA,EACZC,cAAeA,QAGnB,SAACvD,EAAA,EAAD,CACEE,GAAI,CACF3B,OAAQ,GACRD,MAAO,GACPT,gBAAiBD,EAAMI,QAAQmI,QAAQC,KACvC5H,aAAc,KALlB,UAQE,SAAC4B,EAAA,EAAD,CACEF,GAAI,CAAE3B,OAAQ,QACd8B,WAAY,SACZE,eAAe,SAHjB,UAKE,SAACe,EAAA,EAAD,CACEd,QAAS,WA9GzB,IAAiBmE,EA+GCnB,EAAS,IACT6C,EAAAA,EAAAA,KAAY,eAAgB,CAC1BC,SAjHH3B,EAiHoBlB,EA/G5BkB,EAAK4B,QADK,wBAGf,SAACC,GAAD,yBAAqBA,EAArB,6BAA6CA,EAA7C,YA8GgBC,gBAAiBvB,EACjBwB,KAAMlF,EACNmF,GAAE,OAAEtH,QAAF,IAAEA,OAAF,EAAEA,EAAsBmC,QAC1BoF,KAAMlC,EAAYjB,GAAS,OAAS,QAEvC,EAVH,UAYE,SAAC,IAAD,CAAgB3F,MAAM,wBAQrC,E,+BC3PK+I,EAAe,SAAC,GAAwB,IAAtB3H,EAAqB,EAArBA,SAAU4H,EAAW,EAAXA,KAC1B9H,GAAWC,EAAAA,EAAAA,MAEjB,GAA4CK,EAAAA,EAAAA,KAC1C,SAACC,GAAD,OAAWA,EAAMC,aAAaC,WAA9B,IADMsH,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,iBAGf9B,GAAY5F,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMyF,GAAjB,IAAxBE,QAaR,OAXA+B,EAAAA,EAAAA,YAAU,WACR,IAAMpB,EAAUkB,EAAcG,MAAK,SAACxE,GAAD,OAAU,OAAFA,QAAE,IAAFA,OAAA,EAAAA,EAAIb,MAAOqD,CAAnB,IACnCmB,EAAAA,EAAAA,KAAY,eAAgB,CAAEI,gBAAe,OAAEZ,QAAF,IAAEA,OAAF,EAAEA,EAAShE,KAAK,SAAC4D,GAE5DzG,GAASmI,EAAAA,EAAAA,IAAqB,CAAEC,SAAU3B,IAC3C,IAEDzG,GAASqI,EAAAA,EAAAA,IAAuBxB,GACjC,GAAE,CAACX,KAIF,SAAClF,EAAA,EAAD,CAAKC,EAAGf,EAAW,EAAI,EAAvB,UACE,SAACkB,EAAA,EAAD,CAAOM,QAAS,EAAhB,SACGsG,EAAiBvE,KAAI,SAACC,EAAI4E,GACzB,OAAQ5E,EAAGkE,MACT,IAAK,UACH,OAEE,SAAC,KAAD,CAAUlE,GAAIA,IAGlB,IAAK,MACH,OAAQA,EAAG6E,SACT,IAAK,MACH,OAEE,SAAC,KAAD,CAAU7E,GAAIA,EAAIoE,KAAMA,IAG5B,IAAK,MACH,OAEE,SAAC,KAAD,CAAQpE,GAAIA,EAAIoE,KAAMA,IAE1B,IAAK,OACH,OAEE,SAAC,KAAD,CAASpE,GAAIA,EAAIoE,KAAMA,IAG3B,IAAK,QACH,OAEE,SAAC,KAAD,CAAUpE,GAAIA,EAAIoE,KAAMA,IAG5B,QACE,OAEE,SAAC,KAAD,CAASpE,GAAIA,EAAIoE,KAAMA,IAI/B,QACE,OAAO,wBAEZ,OAIR,EAoDD,GAlDsB,WACpB,IAAM5H,GAAWC,EAAAA,EAAAA,GAAc,UAAW,KAAM,KAAM,MAChDvB,GAAQwB,EAAAA,EAAAA,KAERoI,GAAiBpC,EAAAA,EAAAA,QAAO,MAEtB4B,GAAqB1H,EAAAA,EAAAA,KAC3B,SAACC,GAAD,OAAWA,EAAMC,aAAaC,WAA9B,IADMuH,iBASR,OALAC,EAAAA,EAAAA,YAAU,WAERO,EAAe3B,QAAQ4B,UAAYD,EAAe3B,QAAQ6B,YAC3D,GAAE,CAACV,KAGF,UAAC5G,EAAA,EAAD,CACE7B,OAAQ,OACRoJ,UAAW,QACXrJ,MAAOY,EAAW,QAAU,OAH9B,WAME,SAAC,EAAD,KACA,SAACc,EAAA,EAAD,CACE4H,IAAKJ,EACLlJ,MAAO,OACP4B,GAAI,CACF/B,SAAU,WACV0J,SAAU,EACVC,SAAU,SAEVjK,gBACyB,UAAvBD,EAAMI,QAAQmC,KACV,UACAvC,EAAMI,QAAQC,WAEpBF,UAAW,mCAbf,UAgBE,SAAC,IAAD,CAAgBgK,QAAS,IAAKC,cAAc,EAA5C,UACE,SAACnB,EAAD,CAAcC,MAAM,EAAM5H,SAAUA,SAKxC,SAAC,EAAD,MAGL,C,yXC5HK+I,EAAgB,WACpB,MAAgCvI,EAAAA,SAAe,MAA/C,eAAO2C,EAAP,KAAiB6F,EAAjB,KACM5F,EAAOxC,QAAQuC,GAIf8F,EAAc,WAClBD,EAAY,KACb,EACD,OACE,iCACE,SAAC,IAAD,CACE/E,KAAM,GACNtB,GAAG,eACH,gBAAeS,EAAO,kBAAeR,EACrC,gBAAc,OACd,gBAAeQ,EAAO,YAASR,EAC/BtB,QAdc,SAACuB,GACnBmG,EAAYnG,EAAMC,cACnB,KAcG,SAAC,IAAD,CACEH,GAAG,aACHQ,SAAUA,EACVC,KAAMA,EACNC,QAAS4F,EACTjG,cAAe,CACb,kBAAmB,gBANvB,UASE,SAAC,IAAD,CAAOxB,QAAS,EAAG0H,GAAI,EAAvB,SACGC,EAAAA,GAAAA,KAAoB,SAAC3F,GAAD,OACnB,SAAC,IAAD,CAAUlC,QAAS2H,EAAnB,SAAiCzF,EAAG3D,OADjB,UAO9B,EAEKuJ,EAAU,SAAC,GAAkB,IAAhB5F,EAAe,EAAfA,GAAIoE,EAAW,EAAXA,KACflJ,GAAQwB,EAAAA,EAAAA,KACd,OACE,UAAC,IAAD,CAAOkB,UAAU,MAAMC,eAAgBmC,EAAG6F,SAAW,QAAU,MAA/D,WACE,SAAC,IAAD,CACEH,GAAI,IACJI,GAAI,IACJtI,GAAI,CACFrC,gBAAiB6E,EAAG6F,UAChBE,EAAAA,EAAAA,IAAM7K,EAAMI,QAAQC,WAAWyK,QAAS,GACxC9K,EAAMI,QAAQmI,QAAQC,KAC1B5H,aAAc,IACdF,MAAO,eARX,UAWE,SAAC,IAAD,CACEyC,QAAQ,QACRjD,MAAO4E,EAAG6F,SAAW3K,EAAMI,QAAQ2G,KAAO,OAF5C,SAIGjC,EAAG4D,YAGPQ,IAAQ,SAACmB,EAAD,MAGd,EACKU,EAAW,SAAC,GAAkB,IAAhBjG,EAAe,EAAfA,GAAIoE,EAAW,EAAXA,KAChBlJ,GAAQwB,EAAAA,EAAAA,KACd,OACE,UAAC,IAAD,CAAOkB,UAAU,MAAMC,eAAgBmC,EAAG6F,SAAW,QAAU,MAA/D,WACE,SAAC,IAAD,CACEH,GAAI,IACJI,GAAI,IACJtI,GAAI,CACFrC,gBAAiB6E,EAAG6F,UAChBE,EAAAA,EAAAA,IAAM7K,EAAMI,QAAQC,WAAWyK,QAAS,GACxC9K,EAAMI,QAAQmI,QAAQC,KAC1B5H,aAAc,IACdF,MAAO,eARX,UAWE,UAAC,IAAD,CAAOoC,QAAS,EAAhB,WACE,gBACES,IAAKuB,EAAGtB,IACRH,IAAKyB,EAAG4D,QACRjB,MAAO,CAAEsC,UAAW,IAAKnJ,aAAc,WAEzC,SAAC,IAAD,CACEuC,QAAQ,QACRjD,MAAO4E,EAAG6F,SAAW3K,EAAMI,QAAQ2G,KAAO,OAF5C,SAIGjC,EAAG4D,eAITQ,IAAQ,SAACmB,EAAD,MAGd,EACKW,EAAS,SAAC,GAAkB,IAAhBlG,EAAe,EAAfA,GAAIoE,EAAW,EAAXA,KACdlJ,GAAQwB,EAAAA,EAAAA,KACd,OACE,UAAC,IAAD,CAAOkB,UAAU,MAAMC,eAAgBmC,EAAG6F,SAAW,QAAU,MAA/D,WACE,SAAC,IAAD,CACEH,GAAI,IACJI,GAAI,IACJtI,GAAI,CACFrC,gBAAiB6E,EAAG6F,UAChBE,EAAAA,EAAAA,IAAM7K,EAAMI,QAAQC,WAAWyK,QAAS,GACxC9K,EAAMI,QAAQmI,QAAQC,KAC1B5H,aAAc,IACdF,MAAO,eARX,UAWE,UAAC,IAAD,CAAOoC,QAAS,EAAhB,WACE,UAAC,IAAD,CACET,EAAG,EACHK,UAAU,MACVI,QAAS,EACTL,WAAW,SACXH,GAAI,CACFrC,gBAAiBD,EAAMI,QAAQC,WAAWC,MAC1CM,aAAc,GAPlB,WAUE,SAAC,IAAD,CAAO2E,KAAM,MACb,SAAC,IAAD,CAAYpC,QAAQ,UAApB,2BACA,SAAC,IAAD,WACE,SAAC,IAAD,UAGJ,SAAC,IAAD,CACEA,QAAQ,QACRjD,MAAO4E,EAAG6F,SAAW3K,EAAMI,QAAQ2G,KAAO,OAF5C,SAIGjC,EAAG4D,eAITQ,IAAQ,SAACmB,EAAD,MAGd,EACKY,EAAU,SAAC,GAAkB,IAAhBnG,EAAe,EAAfA,GAAIoE,EAAW,EAAXA,KACflJ,GAAQwB,EAAAA,EAAAA,KACd,OACE,UAAC,IAAD,CAAOkB,UAAU,MAAMC,eAAgBmC,EAAG6F,SAAW,QAAU,MAA/D,WACE,SAAC,IAAD,CACEH,GAAI,IACJI,GAAI,IACJtI,GAAI,CACFrC,gBAAiB6E,EAAG6F,UAChBE,EAAAA,EAAAA,IAAM7K,EAAMI,QAAQC,WAAWyK,QAAS,GACxC9K,EAAMI,QAAQmI,QAAQC,KAC1B5H,aAAc,IACdF,MAAO,eARX,UAWE,UAAC,IAAD,CAAOoC,QAAS,EAAhB,WACE,SAAC,IAAD,CACET,EAAG,EACHK,UAAU,SACVI,QAAS,EACTL,WAAW,QACXH,GAAI,CACFrC,gBAAiBD,EAAMI,QAAQC,WAAWC,MAC1CM,aAAc,GAPlB,UAUE,SAAC,IAAD,CAAO8B,UAAW,SAAUI,QAAS,EAArC,UACE,SAAC,IAAD,CACEpC,MAAM,QACNwK,QAAM,EACNtC,IAAG,sCAIT,SAAC,IAAD,CACEzF,QAAQ,QACRjD,MAAO4E,EAAG6F,SAAW3K,EAAMI,QAAQ2G,KAAO,OAF5C,UAIE,gBAAKoE,wBAAyB,CAAEC,OAAQtG,EAAG4D,kBAIhDQ,IAAQ,SAACmB,EAAD,MAGd,EACKgB,EAAW,SAAC,GAAkB,IAAhBvG,EAAe,EAAfA,GAAIoE,EAAW,EAAXA,KAChBlJ,GAAQwB,EAAAA,EAAAA,KACd,OACE,UAAC,IAAD,CAAOkB,UAAU,MAAMC,eAAgBmC,EAAG6F,SAAW,QAAU,MAA/D,WACE,SAAC,IAAD,CACEH,GAAI,IACJI,GAAI,IACJtI,GAAI,CACFrC,gBAAiB6E,EAAG6F,UAChBE,EAAAA,EAAAA,IAAM7K,EAAMI,QAAQC,WAAWC,MAAO,GACtCN,EAAMI,QAAQmI,QAAQC,KAC1B5H,aAAc,IACdF,MAAO,eARX,UAWE,UAAC,IAAD,CAAOoC,QAAS,EAAhB,WACE,SAAC,IAAD,CACET,EAAG,EACHK,UAAU,SACVI,QAAS,EACTL,WAAW,SACXH,GAAI,CACFrC,iBAAiB4K,EAAAA,EAAAA,IAAM7K,EAAMI,QAAQC,WAAWC,MAAO,GAEvDM,aAAc,GARlB,UAWE,SAAC,IAAD,CAAYuC,QAAQ,QAAQjD,MAAOF,EAAMI,QAAQ2G,KAAjD,SACGjC,EAAG4D,aAGR,SAAC,IAAD,CACEvF,QAAQ,QACRjD,MAAO4E,EAAG6F,SAAW3K,EAAMI,QAAQ2G,KAAO,OAF5C,SAIGjC,EAAGwG,aAITpC,IAAQ,SAACmB,EAAD,MAGd,EACKkB,EAAW,SAAC,GAAY,IAAVzG,EAAS,EAATA,GACZ9E,GAAQwB,EAAAA,EAAAA,KACd,OACE,UAAC,IAAD,CAAOkB,UAAU,MAAMD,WAAY,SAAUE,eAAe,gBAA5D,WACE,SAAC,IAAD,CAASjC,MAAM,SACf,SAAC,IAAD,CAAYyC,QAAQ,UAAUb,GAAI,CAAEpC,MAAOF,EAAMI,QAAQ2G,MAAzD,SACGjC,EAAGiC,QAEN,SAAC,IAAD,CAASrG,MAAM,UAGpB,C","sources":["components/Chat/Header.js","components/Chat/Footer.js","pages/dashboard/Conversation.js","sections/Dashboard/Conversation.js"],"sourcesContent":["import React from \"react\";\nimport {\n  Avatar,\n  Badge,\n  Box,\n  Divider,\n  Fade,\n  IconButton,\n  Menu,\n  MenuItem,\n  Stack,\n  styled,\n  Typography,\n} from \"@mui/material\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { CaretDown, MagnifyingGlass, Phone, VideoCamera } from \"phosphor-react\";\nimport { faker } from \"@faker-js/faker\";\nimport useResponsive from \"../../hooks/useResponsive\";\nimport { ToggleSidebar } from \"../../redux/slices/app\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StartAudioCall } from \"../../redux/slices/audioCall\";\nimport { StartVideoCall } from \"../../redux/slices/videoCall\";\n\nconst StyledBadge = styled(Badge)(({ theme }) => ({\n  \"& .MuiBadge-badge\": {\n    backgroundColor: \"#44b700\",\n    color: \"#44b700\",\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n    \"&::after\": {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      borderRadius: \"50%\",\n      animation: \"ripple 1.2s infinite ease-in-out\",\n      border: \"1px solid currentColor\",\n      content: '\"\"',\n    },\n  },\n  \"@keyframes ripple\": {\n    \"0%\": {\n      transform: \"scale(.8)\",\n      opacity: 1,\n    },\n    \"100%\": {\n      transform: \"scale(2.4)\",\n      opacity: 0,\n    },\n  },\n}));\n\nconst Conversation_Menu = [\n  {\n    title: \"Contact info\",\n  },\n  {\n    title: \"Mute notifications\",\n  },\n  {\n    title: \"Clear messages\",\n  },\n  {\n    title: \"Delete chat\",\n  },\n];\n\nconst ChatHeader = () => {\n  const dispatch = useDispatch();\n  const isMobile = useResponsive(\"between\", \"md\", \"xs\", \"sm\");\n  const theme = useTheme();\n\n  const {current_conversation} = useSelector((state) => state.conversation.direct_chat);\n\n  const [conversationMenuAnchorEl, setConversationMenuAnchorEl] =\n    React.useState(null);\n  const openConversationMenu = Boolean(conversationMenuAnchorEl);\n  const handleClickConversationMenu = (event) => {\n    setConversationMenuAnchorEl(event.currentTarget);\n  };\n  const handleCloseConversationMenu = () => {\n    setConversationMenuAnchorEl(null);\n  };\n\n  return (\n    <>\n      <Box\n        p={2}\n        width={\"100%\"}\n        sx={{\n          backgroundColor:\n            theme.palette.mode === \"light\"\n              ? \"#F8FAFF\"\n              : theme.palette.background,\n          boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\n        }}\n      >\n        <Stack\n          alignItems={\"center\"}\n          direction={\"row\"}\n          sx={{ width: \"100%\", height: \"100%\" }}\n          justifyContent=\"space-between\"\n        >\n          <Stack\n            onClick={() => {\n              dispatch(ToggleSidebar());\n            }}\n            spacing={2}\n            direction=\"row\"\n          >\n            <Box>\n              <StyledBadge\n                overlap=\"circular\"\n                anchorOrigin={{\n                  vertical: \"bottom\",\n                  horizontal: \"right\",\n                }}\n                variant=\"dot\"\n              >\n                <Avatar\n                  alt={current_conversation?.name}\n                  src={current_conversation?.img}\n                />\n              </StyledBadge>\n            </Box>\n            <Stack spacing={0.2}>\n              <Typography variant=\"subtitle2\">\n                {current_conversation?.name}\n              </Typography>\n              <Typography variant=\"caption\">Online</Typography>\n            </Stack>\n          </Stack>\n          <Stack\n            direction={\"row\"}\n            alignItems=\"center\"\n            spacing={isMobile ? 1 : 3}\n          >\n            <IconButton onClick={() => {\n              dispatch(StartVideoCall(current_conversation.user_id));\n            }}>\n              <VideoCamera />\n            </IconButton>\n            <IconButton\n              onClick={() => {\n                \n                dispatch(StartAudioCall(current_conversation.user_id));\n              }}\n            >\n              <Phone />\n            </IconButton>\n            {!isMobile && (\n              <IconButton>\n                <MagnifyingGlass />\n              </IconButton>\n            )}\n            <Divider orientation=\"vertical\" flexItem />\n            <IconButton\n              id=\"conversation-positioned-button\"\n              aria-controls={\n                openConversationMenu\n                  ? \"conversation-positioned-menu\"\n                  : undefined\n              }\n              aria-haspopup=\"true\"\n              aria-expanded={openConversationMenu ? \"true\" : undefined}\n              onClick={handleClickConversationMenu}\n            >\n              <CaretDown />\n            </IconButton>\n            <Menu\n              MenuListProps={{\n                \"aria-labelledby\": \"fade-button\",\n              }}\n              TransitionComponent={Fade}\n              id=\"conversation-positioned-menu\"\n              aria-labelledby=\"conversation-positioned-button\"\n              anchorEl={conversationMenuAnchorEl}\n              open={openConversationMenu}\n              onClose={handleCloseConversationMenu}\n              anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"right\",\n              }}\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n            >\n              <Box p={1}>\n                <Stack spacing={1}>\n                  {Conversation_Menu.map((el) => (\n                    <MenuItem onClick={handleCloseConversationMenu}>\n                      <Stack\n                        sx={{ minWidth: 100 }}\n                        direction=\"row\"\n                        alignItems={\"center\"}\n                        justifyContent=\"space-between\"\n                      >\n                        <span>{el.title}</span>\n                      </Stack>{\" \"}\n                    </MenuItem>\n                  ))}\n                </Stack>\n              </Box>\n            </Menu>\n          </Stack>\n        </Stack>\n      </Box>\n\n      \n    </>\n  );\n};\n\nexport default ChatHeader;\n","import {\n  Box,\n  Fab,\n  IconButton,\n  InputAdornment,\n  Stack,\n  TextField,\n  Tooltip,\n} from \"@mui/material\";\nimport {\n  Camera,\n  File,\n  Image,\n  LinkSimple,\n  PaperPlaneTilt,\n  Smiley,\n  Sticker,\n  User,\n} from \"phosphor-react\";\nimport { useTheme, styled } from \"@mui/material/styles\";\nimport React, { useRef, useState } from \"react\";\nimport useResponsive from \"../../hooks/useResponsive\";\n\nimport data from \"@emoji-mart/data\";\nimport Picker from \"@emoji-mart/react\";\nimport { socket } from \"../../socket\";\nimport { useSelector } from \"react-redux\";\n\nconst StyledInput = styled(TextField)(({ theme }) => ({\n  \"& .MuiInputBase-input\": {\n    paddingTop: \"12px !important\",\n    paddingBottom: \"12px !important\",\n  },\n}));\n\nconst Actions = [\n  {\n    color: \"#4da5fe\",\n    icon: <Image size={24} />,\n    y: 102,\n    title: \"Photo/Video\",\n  },\n  {\n    color: \"#1b8cfe\",\n    icon: <Sticker size={24} />,\n    y: 172,\n    title: \"Stickers\",\n  },\n  {\n    color: \"#0172e4\",\n    icon: <Camera size={24} />,\n    y: 242,\n    title: \"Image\",\n  },\n  {\n    color: \"#0159b2\",\n    icon: <File size={24} />,\n    y: 312,\n    title: \"Document\",\n  },\n  {\n    color: \"#013f7f\",\n    icon: <User size={24} />,\n    y: 382,\n    title: \"Contact\",\n  },\n];\n\nconst ChatInput = ({\n  openPicker,\n  setOpenPicker,\n  setValue,\n  value,\n  inputRef,\n}) => {\n  const [openActions, setOpenActions] = React.useState(false);\n\n  return (\n    <StyledInput\n      inputRef={inputRef}\n      value={value}\n      onChange={(event) => {\n        setValue(event.target.value);\n      }}\n      fullWidth\n      placeholder=\"Write a message...\"\n      variant=\"filled\"\n      InputProps={{\n        disableUnderline: true,\n        startAdornment: (\n          <Stack sx={{ width: \"max-content\" }}>\n            <Stack\n              sx={{\n                position: \"relative\",\n                display: openActions ? \"inline-block\" : \"none\",\n              }}\n            >\n              {Actions.map((el) => (\n                <Tooltip placement=\"right\" title={el.title}>\n                  <Fab\n                    onClick={() => {\n                      setOpenActions(!openActions);\n                    }}\n                    sx={{\n                      position: \"absolute\",\n                      top: -el.y,\n                      backgroundColor: el.color,\n                    }}\n                    aria-label=\"add\"\n                  >\n                    {el.icon}\n                  </Fab>\n                </Tooltip>\n              ))}\n            </Stack>\n\n            <InputAdornment>\n              <IconButton\n                onClick={() => {\n                  setOpenActions(!openActions);\n                }}\n              >\n                <LinkSimple />\n              </IconButton>\n            </InputAdornment>\n          </Stack>\n        ),\n        endAdornment: (\n          <Stack sx={{ position: \"relative\" }}>\n            <InputAdornment>\n              <IconButton\n                onClick={() => {\n                  setOpenPicker(!openPicker);\n                }}\n              >\n                <Smiley />\n              </IconButton>\n            </InputAdornment>\n          </Stack>\n        ),\n      }}\n    />\n  );\n};\n\nfunction linkify(text) {\n  const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\n  return text.replace(\n    urlRegex,\n    (url) => `<a href=\"${url}\" target=\"_blank\">${url}</a>`\n  );\n}\n\nfunction containsUrl(text) {\n  const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\n  return urlRegex.test(text);\n}\n\nconst Footer = () => {\n  const theme = useTheme();\n\n  const { current_conversation } = useSelector(\n    (state) => state.conversation.direct_chat\n    // (state) => state.direct_chat.current_conversation\n  );\n\n  const user_id = window.localStorage.getItem(\"user_id\");\n\n  const isMobile = useResponsive(\"between\", \"md\", \"xs\", \"sm\");\n\n  const { sideBar, room_id } = useSelector((state) => state.app);\n\n  const [openPicker, setOpenPicker] = React.useState(false);\n\n  const [value, setValue] = useState(\"\");\n  const inputRef = useRef(null);\n\n  function handleEmojiClick(emoji) {\n    const input = inputRef.current;\n\n    if (input) {\n      const selectionStart = input.selectionStart;\n      const selectionEnd = input.selectionEnd;\n\n      setValue(\n        value.substring(0, selectionStart) +\n          emoji +\n          value.substring(selectionEnd)\n      );\n\n      // Move the cursor to the end of the inserted emoji\n      input.selectionStart = input.selectionEnd = selectionStart + 1;\n    }\n  }\n\n  return (\n    <Box\n      sx={{\n        position: \"relative\",\n        backgroundColor: \"transparent !important\",\n      }}\n    >\n      <Box\n        p={isMobile ? 1 : 2}\n        width={\"100%\"}\n        sx={{\n          backgroundColor:\n            theme.palette.mode === \"light\"\n              ? \"#F8FAFF\"\n              : theme.palette.background,\n          boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\n        }}\n      >\n        <Stack direction=\"row\" alignItems={\"center\"} spacing={isMobile ? 1 : 3}>\n          <Stack sx={{ width: \"100%\" }}>\n            <Box\n              style={{\n                zIndex: 10,\n                position: \"fixed\",\n                display: openPicker ? \"inline\" : \"none\",\n                bottom: 81,\n                right: isMobile ? 20 : sideBar.open ? 420 : 100,\n              }}\n            >\n              <Picker\n                theme={theme.palette.mode}\n                data={data}\n                onEmojiSelect={(emoji) => {\n                  handleEmojiClick(emoji.native);\n                }}\n              />\n            </Box>\n            {/* Chat Input */}\n            <ChatInput\n              inputRef={inputRef}\n              value={value}\n              setValue={setValue}\n              openPicker={openPicker}\n              setOpenPicker={setOpenPicker}\n            />\n          </Stack>\n          <Box\n            sx={{\n              height: 48,\n              width: 48,\n              backgroundColor: theme.palette.primary.main,\n              borderRadius: 1.5,\n            }}\n          >\n            <Stack\n              sx={{ height: \"100%\" }}\n              alignItems={\"center\"}\n              justifyContent=\"center\"\n            >\n              <IconButton\n                onClick={() => {\n                  setValue(\"\")\n                  socket.emit(\"text_message\", {\n                    message: linkify(value),\n                    conversation_id: room_id,\n                    from: user_id,\n                    to: current_conversation?.user_id,\n                    type: containsUrl(value) ? \"Link\" : \"Text\",\n                  });\n                }}\n              >\n                <PaperPlaneTilt color=\"#ffffff\" />\n              </IconButton>\n            </Stack>\n          </Box>\n        </Stack>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Footer;\n","import { Stack, Box } from \"@mui/material\";\nimport React, { useEffect, useRef } from \"react\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { SimpleBarStyle } from \"../../components/Scrollbar\";\n\nimport { ChatHeader, ChatFooter } from \"../../components/Chat\";\nimport useResponsive from \"../../hooks/useResponsive\";\nimport { Chat_History } from \"../../data\";\nimport {\n  DocMsg,\n  LinkMsg,\n  MediaMsg,\n  ReplyMsg,\n  TextMsg,\n  Timeline,\n} from \"../../sections/Dashboard/Conversation\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  FetchCurrentMessages,\n  SetCurrentConversation,\n} from \"../../redux/slices/conversation\";\nimport { socket } from \"../../socket\";\n\nconst Conversation = ({ isMobile, menu }) => {\n  const dispatch = useDispatch();\n\n  const { conversations, current_messages } = useSelector(\n    (state) => state.conversation.direct_chat\n  );\n  const { room_id } = useSelector((state) => state.app);\n\n  useEffect(() => {\n    const current = conversations.find((el) => el?.id === room_id);\n    socket.emit(\"get_messages\", { conversation_id: current?.id}, (data) => {\n      // data => list of messages\n      dispatch(FetchCurrentMessages({ messages: data }));\n    });\n\n    dispatch(SetCurrentConversation(current));\n  }, [room_id]);\n\n\n  return (\n    <Box p={isMobile ? 1 : 3}>\n      <Stack spacing={3}>\n        {current_messages.map((el, idx) => {\n          switch (el.type) {\n            case \"divider\":\n              return (\n                // Timeline\n                <Timeline el={el} />\n              );\n\n            case \"msg\":\n              switch (el.subtype) {\n                case \"img\":\n                  return (\n                    // Media Message\n                    <MediaMsg el={el} menu={menu} />\n                  );\n\n                case \"doc\":\n                  return (\n                    // Doc Message\n                    <DocMsg el={el} menu={menu} />\n                  );\n                case \"Link\":\n                  return (\n                    //  Link Message\n                    <LinkMsg el={el} menu={menu} />\n                  );\n\n                case \"reply\":\n                  return (\n                    //  ReplyMessage\n                    <ReplyMsg el={el} menu={menu} />\n                  );\n\n                default:\n                  return (\n                    // Text Message\n                    <TextMsg el={el} menu={menu} />\n                  );\n              }\n\n            default:\n              return <></>;\n          }\n        })}\n      </Stack>\n    </Box>\n  );\n};\n\nconst ChatComponent = () => {\n  const isMobile = useResponsive(\"between\", \"md\", \"xs\", \"sm\");\n  const theme = useTheme();\n\n  const messageListRef = useRef(null);\n\n  const { current_messages } = useSelector(\n    (state) => state.conversation.direct_chat\n  );\n\n  useEffect(() => {\n    // Scroll to the bottom of the message list when new messages are added\n    messageListRef.current.scrollTop = messageListRef.current.scrollHeight;\n  }, [current_messages]);\n\n  return (\n    <Stack\n      height={\"100%\"}\n      maxHeight={\"100vh\"}\n      width={isMobile ? \"100vw\" : \"auto\"}\n    >\n      {/*  */}\n      <ChatHeader />\n      <Box\n        ref={messageListRef}\n        width={\"100%\"}\n        sx={{\n          position: \"relative\",\n          flexGrow: 1,\n          overflow: \"scroll\",\n\n          backgroundColor:\n            theme.palette.mode === \"light\"\n              ? \"#F0F4FA\"\n              : theme.palette.background,\n\n          boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\n        }}\n      >\n        <SimpleBarStyle timeout={500} clickOnTrack={false}>\n          <Conversation menu={true} isMobile={isMobile} />\n        </SimpleBarStyle>\n      </Box>\n\n      {/*  */}\n      <ChatFooter />\n    </Stack>\n  );\n};\n\nexport default ChatComponent;\n\nexport { Conversation };\n","import React from \"react\";\nimport {\n  Stack,\n  Box,\n  Typography,\n  Menu,\n  MenuItem,\n  IconButton,\n  Divider,\n} from \"@mui/material\";\nimport { useTheme, alpha } from \"@mui/material/styles\";\nimport { DotsThreeVertical, DownloadSimple, Image } from \"phosphor-react\";\nimport { Message_options } from \"../../data\";\nimport { Link } from \"react-router-dom\";\nimport truncateString from \"../../utils/truncate\";\nimport { LinkPreview } from \"@dhaiwat10/react-link-preview\";\nimport Embed from \"react-embed\";\n\nconst MessageOption = () => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  return (\n    <>\n      <DotsThreeVertical\n        size={20}\n        id=\"basic-button\"\n        aria-controls={open ? \"basic-menu\" : undefined}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? \"true\" : undefined}\n        onClick={handleClick}\n      />\n      <Menu\n        id=\"basic-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        MenuListProps={{\n          \"aria-labelledby\": \"basic-button\",\n        }}\n      >\n        <Stack spacing={1} px={1}>\n          {Message_options.map((el) => (\n            <MenuItem onClick={handleClose}>{el.title}</MenuItem>\n          ))}\n        </Stack>\n      </Menu>\n    </>\n  );\n};\n\nconst TextMsg = ({ el, menu }) => {\n  const theme = useTheme();\n  return (\n    <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\n      <Box\n        px={1.5}\n        py={1.5}\n        sx={{\n          backgroundColor: el.incoming\n            ? alpha(theme.palette.background.default, 1)\n            : theme.palette.primary.main,\n          borderRadius: 1.5,\n          width: \"max-content\",\n        }}\n      >\n        <Typography\n          variant=\"body2\"\n          color={el.incoming ? theme.palette.text : \"#fff\"}\n        >\n          {el.message}\n        </Typography>\n      </Box>\n      {menu && <MessageOption />}\n    </Stack>\n  );\n};\nconst MediaMsg = ({ el, menu }) => {\n  const theme = useTheme();\n  return (\n    <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\n      <Box\n        px={1.5}\n        py={1.5}\n        sx={{\n          backgroundColor: el.incoming\n            ? alpha(theme.palette.background.default, 1)\n            : theme.palette.primary.main,\n          borderRadius: 1.5,\n          width: \"max-content\",\n        }}\n      >\n        <Stack spacing={1}>\n          <img\n            src={el.img}\n            alt={el.message}\n            style={{ maxHeight: 210, borderRadius: \"10px\" }}\n          />\n          <Typography\n            variant=\"body2\"\n            color={el.incoming ? theme.palette.text : \"#fff\"}\n          >\n            {el.message}\n          </Typography>\n        </Stack>\n      </Box>\n      {menu && <MessageOption />}\n    </Stack>\n  );\n};\nconst DocMsg = ({ el, menu }) => {\n  const theme = useTheme();\n  return (\n    <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\n      <Box\n        px={1.5}\n        py={1.5}\n        sx={{\n          backgroundColor: el.incoming\n            ? alpha(theme.palette.background.default, 1)\n            : theme.palette.primary.main,\n          borderRadius: 1.5,\n          width: \"max-content\",\n        }}\n      >\n        <Stack spacing={2}>\n          <Stack\n            p={2}\n            direction=\"row\"\n            spacing={3}\n            alignItems=\"center\"\n            sx={{\n              backgroundColor: theme.palette.background.paper,\n              borderRadius: 1,\n            }}\n          >\n            <Image size={48} />\n            <Typography variant=\"caption\">Abstract.png</Typography>\n            <IconButton>\n              <DownloadSimple />\n            </IconButton>\n          </Stack>\n          <Typography\n            variant=\"body2\"\n            color={el.incoming ? theme.palette.text : \"#fff\"}\n          >\n            {el.message}\n          </Typography>\n        </Stack>\n      </Box>\n      {menu && <MessageOption />}\n    </Stack>\n  );\n};\nconst LinkMsg = ({ el, menu }) => {\n  const theme = useTheme();\n  return (\n    <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\n      <Box\n        px={1.5}\n        py={1.5}\n        sx={{\n          backgroundColor: el.incoming\n            ? alpha(theme.palette.background.default, 1)\n            : theme.palette.primary.main,\n          borderRadius: 1.5,\n          width: \"max-content\",\n        }}\n      >\n        <Stack spacing={2}>\n          <Stack\n            p={2}\n            direction=\"column\"\n            spacing={3}\n            alignItems=\"start\"\n            sx={{\n              backgroundColor: theme.palette.background.paper,\n              borderRadius: 1,\n            }}\n          >\n            <Stack direction={\"column\"} spacing={2}>\n              <Embed\n                width=\"300px\"\n                isDark\n                url={`https://youtu.be/xoWxBR34qLE`}\n              />\n            </Stack>\n          </Stack>\n          <Typography\n            variant=\"body2\"\n            color={el.incoming ? theme.palette.text : \"#fff\"}\n          >\n            <div dangerouslySetInnerHTML={{ __html: el.message }}></div>\n          </Typography>\n        </Stack>\n      </Box>\n      {menu && <MessageOption />}\n    </Stack>\n  );\n};\nconst ReplyMsg = ({ el, menu }) => {\n  const theme = useTheme();\n  return (\n    <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\n      <Box\n        px={1.5}\n        py={1.5}\n        sx={{\n          backgroundColor: el.incoming\n            ? alpha(theme.palette.background.paper, 1)\n            : theme.palette.primary.main,\n          borderRadius: 1.5,\n          width: \"max-content\",\n        }}\n      >\n        <Stack spacing={2}>\n          <Stack\n            p={2}\n            direction=\"column\"\n            spacing={3}\n            alignItems=\"center\"\n            sx={{\n              backgroundColor: alpha(theme.palette.background.paper, 1),\n\n              borderRadius: 1,\n            }}\n          >\n            <Typography variant=\"body2\" color={theme.palette.text}>\n              {el.message}\n            </Typography>\n          </Stack>\n          <Typography\n            variant=\"body2\"\n            color={el.incoming ? theme.palette.text : \"#fff\"}\n          >\n            {el.reply}\n          </Typography>\n        </Stack>\n      </Box>\n      {menu && <MessageOption />}\n    </Stack>\n  );\n};\nconst Timeline = ({ el }) => {\n  const theme = useTheme();\n  return (\n    <Stack direction=\"row\" alignItems={\"center\"} justifyContent=\"space-between\">\n      <Divider width=\"46%\" />\n      <Typography variant=\"caption\" sx={{ color: theme.palette.text }}>\n        {el.text}\n      </Typography>\n      <Divider width=\"46%\" />\n    </Stack>\n  );\n};\n\nexport { Timeline, MediaMsg, LinkMsg, DocMsg, TextMsg, ReplyMsg };\n"],"names":["StyledBadge","styled","Badge","theme","backgroundColor","color","boxShadow","palette","background","paper","position","top","left","width","height","borderRadius","animation","border","content","transform","opacity","Conversation_Menu","title","dispatch","useDispatch","isMobile","useResponsive","useTheme","current_conversation","useSelector","state","conversation","direct_chat","React","conversationMenuAnchorEl","setConversationMenuAnchorEl","openConversationMenu","Boolean","handleCloseConversationMenu","Box","p","sx","mode","Stack","alignItems","direction","justifyContent","onClick","ToggleSidebar","spacing","overlap","anchorOrigin","vertical","horizontal","variant","Avatar","alt","name","src","img","Typography","IconButton","StartVideoCall","user_id","StartAudioCall","Divider","orientation","flexItem","id","undefined","event","currentTarget","Menu","MenuListProps","TransitionComponent","Fade","anchorEl","open","onClose","transformOrigin","map","el","MenuItem","minWidth","StyledInput","TextField","paddingTop","paddingBottom","Actions","icon","size","y","ChatInput","openPicker","setOpenPicker","setValue","value","inputRef","openActions","setOpenActions","onChange","target","fullWidth","placeholder","InputProps","disableUnderline","startAdornment","display","Tooltip","placement","Fab","InputAdornment","endAdornment","containsUrl","text","test","window","localStorage","getItem","app","sideBar","room_id","useState","useRef","style","zIndex","bottom","right","data","onEmojiSelect","emoji","input","current","selectionStart","selectionEnd","substring","handleEmojiClick","native","primary","main","socket","message","replace","url","conversation_id","from","to","type","Conversation","menu","conversations","current_messages","useEffect","find","FetchCurrentMessages","messages","SetCurrentConversation","idx","subtype","messageListRef","scrollTop","scrollHeight","maxHeight","ref","flexGrow","overflow","timeout","clickOnTrack","MessageOption","setAnchorEl","handleClose","px","Message_options","TextMsg","incoming","py","alpha","default","MediaMsg","DocMsg","LinkMsg","isDark","dangerouslySetInnerHTML","__html","ReplyMsg","reply","Timeline"],"sourceRoot":""}