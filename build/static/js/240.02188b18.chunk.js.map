{"version":3,"file":"static/js/240.02188b18.chunk.js","mappings":"qKAYe,SAASA,EAAT,GAAwD,IAAhCC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,QACzD,OACE,SAAC,MAAD,kBAAUA,GAAV,cACE,iBAAMD,SAAUA,EAAhB,SAA2BD,MAGhC,C,yOCgCD,GA1CcG,EAAAA,EAAAA,aACZ,WAA4DC,GAAS,IAAD,IAAjEC,eAAAA,OAAiE,aAAzCC,OAAAA,OAAyC,MAAhC,OAAgC,EAAxBC,EAAwB,EAAxBA,GAAOC,GAAiB,YAC5DC,GACJ,SAACC,EAAA,GAAD,QACEC,UAAWC,EAAAA,cACXC,iBAAiB,UACjBP,OAAQD,OAAiBS,EAAYR,EACrCS,eAAgBV,EAAiB,0BAA4B,0BAC7DE,GAAI,CAAES,MAAO,EAAGC,OAAQ,EAAGC,UAAW,UAClCV,IAIR,OACE,SAACE,EAAA,EAAD,CACEN,IAAKA,EACLO,UAAU,OACVJ,IAAE,QACAY,WAAY,EACZC,QAAS,QACTC,SAAU,SACVC,SAAU,WACV,aAAc,CACZN,MAAO,EACPC,OAAQ,EACRM,eAAgB,qBAEfhB,GAbP,SAgBGE,GAGN,IC/BY,SAASe,EAAT,GAAkC,IAATC,EAAQ,EAARA,KACtC,IAAKA,EACH,OAAO,KAGT,IAAMC,EAAyB,kBAATD,EAAoBA,EAAOA,EAAKE,QAEtD,OACE,SAAC,EAAD,CACEC,IAAI,SACJC,IAAKH,EACLnB,GAAI,CACFuB,OAAQ,EACRT,SAAU,SACVU,aAAc,MACdT,SAAU,WACVN,MAAM,oBACNC,OAAO,sBAId,C,2GCpBKe,GAAiBC,EAAAA,EAAAA,IAAO,MAAPA,EAAc,gBAAGC,EAAH,EAAGA,MAAH,MAAgB,CACnDlB,MAAO,IACPC,OAAQ,IACRkB,OAAQ,OACRf,QAAS,OACTgB,OAAQ,UACRf,SAAU,SACVU,aAAc,MACdM,WAAY,SACZf,SAAU,WACVgB,eAAgB,SAChBC,OAAO,cAAD,QAAgBC,EAAAA,EAAAA,IAAMN,EAAMO,QAAQC,KAAK,KAAM,MAXlB,IAc/BC,GAAoBV,EAAAA,EAAAA,IAAO,MAAPA,EAAc,gBAAGC,EAAH,EAAGA,MAAH,MAAgB,CACtDJ,OAAQ,EACRV,QAAS,OACTW,aAAc,MACdT,SAAU,WACVe,WAAY,SACZO,cAAe,SACfN,eAAgB,SAChBtB,MAAM,oBACNC,OAAO,oBACP4B,MAAOX,EAAMO,QAAQK,KAAKC,SAC1BC,gBAAiBd,EAAMO,QAAQQ,WAAWC,QAC1CC,WAAYjB,EAAMkB,YAAYC,OAAO,UAAW,CAC9CC,OAAQpB,EAAMkB,YAAYE,OAAOC,UACjCC,SAAUtB,EAAMkB,YAAYI,SAASC,UAdD,IA4BzB,SAASC,EAAT,GAOX,IANFC,EAMC,EANDA,MACAlC,EAKC,EALDA,KACAsB,EAIC,EAJDA,SACAa,EAGC,EAHDA,WACArD,EAEC,EAFDA,GACGC,GACF,YACD,GAKIqD,EAAAA,EAAAA,KAAY,QACdC,UAAU,EACVf,SAAAA,GACGvC,IAPHuD,EADF,EACEA,aACAC,EAFF,EAEEA,cACAC,EAHF,EAGEA,aAQIC,IAAYzC,EAEZ0C,EAbN,EAIEC,gBASgCT,EAElC,OACE,iCACE,UAAC3B,GAAD,kBACM+B,KADN,IAEExD,IAAE,0CACI0D,GAAgB,CAClBI,QAAS,MAEPF,IAAO,QACTG,YAAa,eACTJ,GAAW,CACbK,QAAS,mBAGTxB,GAAY,CACdsB,QAAS,IACTG,cAAe,SAEbN,GAAW,CACb,UAAW,CACT,iBAAkB,CAChBG,QAAS,MAIZ9D,GAvBP,WA0BE,4BAAWyD,MAEVE,IAAW,SAAC1C,EAAD,CAAeC,KAAMA,KAEjC,UAACkB,EAAD,CACE8B,UAAU,cACVlE,IAAE,gBACA,UAAW,CACT8D,QAAS,MAEPH,GAAW,CACbpC,OAAQ,EACRuC,QAAS,EACTxB,MAAO,eACP0B,QAAS,SAACrC,GAAD,OAAWM,EAAAA,EAAAA,IAAMN,EAAMO,QAAQC,KAAK,KAAM,IAA1C,IAEPyB,GAAW,CACbtB,MAAO,aACP0B,QAAS,kBAdf,WAkBE,SAAC,IAAD,KAEA,SAACG,EAAA,EAAD,CAAYC,QAAQ,UAApB,SACGlD,EAAO,eAAiB,wBAK9BmC,GAAcA,IAGpB,C,eCzHM,SAASgB,EAAT,GAA8C,IAAnBC,EAAkB,EAAlBA,KAASrE,GAAS,YAC1CsE,GAAYC,EAAAA,EAAAA,MAAZD,QAER,OACE,SAAC,KAAD,CACED,KAAMA,EACNC,QAASA,EACTE,OAAQ,gBAAGC,EAAH,EAAGA,MAAqBtB,EAAxB,EAAUuB,WAAcvB,MAAxB,OACN,4BACE,SAACD,GAAD,QACEyB,OAAQ,CACN,UAAW,IAEbxB,QAASA,EACTlC,KAAMwD,EAAMG,OACR5E,MAGHmD,IACD,SAAC0B,EAAA,EAAD,CAAgB1B,OAAK,EAACpD,GAAI,CAAE+E,GAAI,EAAGC,UAAW,UAA9C,SACG5B,EAAM6B,YAbP,GAoBb,C,iDC9Bc,SAASC,EAAT,GAAuD,IAA/BZ,EAA8B,EAA9BA,KAAMjB,EAAwB,EAAxBA,WAAepD,GAAS,YAC3DsE,GAAYC,EAAAA,EAAAA,MAAZD,QAER,OACE,SAAC,KAAD,CACED,KAAMA,EACNC,QAASA,EACTE,OAAQ,gBAAGC,EAAH,EAAGA,MAAqBtB,EAAxB,EAAUuB,WAAcvB,MAAxB,OACN,SAAC+B,EAAA,GAAD,kBACMT,GADN,IAEEU,WAAS,EAETP,MAA8B,kBAAhBH,EAAMG,OAAsC,IAAhBH,EAAMG,MAAc,GAAKH,EAAMG,MACzEzB,QAASA,EACTC,WAAYD,EAAK,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAO6B,QAAU5B,GACjCpD,GARA,GAab,C,0TCjBc,SAASoF,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,MAAnBC,GAAP,eACA,GAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAmBC,EAAAA,KAAaC,MAAM,CAE1CC,SAAUF,EAAAA,KACPG,IAAI,EAAG,0CACPC,SAAS,wBACZC,gBAAiBL,EAAAA,KACdI,SAAS,gCACTE,MAAM,CAACN,EAAAA,GAAQ,YAAa,MAAO,0BAQlCnG,GAAU0G,EAAAA,EAAAA,IAAQ,CACtBC,KAAM,WACNC,UAAUC,EAAAA,EAAAA,GAAYX,GACtBY,cARoB,CACpBT,SAAU,GACVG,gBAAiB,MAUjBO,EACE/G,EADF+G,aAGIhH,EAAQ,yCAAG,WAAOiH,GAAP,sEACf,IAEArB,GAASsB,EAAAA,EAAAA,KAAY,kBAAID,GAAL,IAAWE,MAAOpB,EAAgBqB,IAAI,YAGzD,CAFC,MAAO1D,GACP2D,QAAQ3D,MAAMA,EACf,CANc,2CAAH,sDASd,OACE,SAAC,KAAD,CAAczD,QAASA,EAASD,SAAUgH,EAAahH,GAAvD,UACE,UAACsH,EAAA,EAAD,CAAOC,QAAS,EAAhB,WAGE,SAAC,KAAD,CACE3C,KAAK,WACL4C,MAAM,WACNC,KAAMxB,EAAe,OAAS,WAC9ByB,WAAY,CACVC,cACI,SAACC,EAAA,EAAD,CAAgBvG,SAAS,MAAzB,UACE,SAACwG,EAAA,EAAD,CACEC,QAAS,kBAAM5B,GAAiBD,EAAvB,EACT8B,KAAK,MAFP,SAIG9B,GAAe,SAAC,IAAD,KAAU,SAAC,IAAD,YAOtC,SAAC,KAAD,CACErB,KAAK,kBACL4C,MAAM,uBACNC,KAAMxB,EAAe,OAAS,WAC9ByB,WAAY,CACVC,cACI,SAACC,EAAA,EAAD,CAAgBvG,SAAS,MAAzB,UACE,SAACwG,EAAA,EAAD,CACEC,QAAS,kBAAM5B,GAAiBD,EAAvB,EACT8B,KAAK,MAFP,SAIG9B,GAAe,SAAC,IAAD,KAAU,SAAC,IAAD,YAOtC,SAAC+B,EAAA,EAAD,CACEtC,WAAS,EACTuC,KAAK,QACLR,KAAK,SACL/C,QAAQ,YAERpE,GAAI,CACF4H,GAAI,EACJ5D,QAAS,eACT1B,MAAO,SAACX,GAAD,MACkB,UAAvBA,EAAMO,QAAQoE,KAAmB,eAAiB,UAD7C,EAEP,UAAW,CACTtC,QAAS,eACT1B,MAAO,SAACX,GAAD,MACkB,UAAvBA,EAAMO,QAAQoE,KAAmB,eAAiB,UAD7C,IAbb,iCAuBP,CCjHD,IAoCA,EApCoB,WAClB,OACE,iCACE,UAACU,EAAA,EAAD,CAAOC,QAAS,EAAGjH,GAAI,CAAE6H,GAAI,EAAG9G,SAAU,YAA1C,WACE,SAACoD,EAAA,EAAD,CAAYC,QAAQ,KAAK0D,WAAS,EAAlC,6BAIA,SAAC3D,EAAA,EAAD,CAAYnE,GAAI,CAAEsC,MAAO,iBAAkBuF,GAAI,GAA/C,+CAOF,SAACxC,EAAD,KAEA,UAAC0C,EAAA,EAAD,CACE3H,UAAW4H,EAAAA,GACXC,GAAI,cACJ3F,MAAM,UACN8B,QAAQ,YACRpE,GAAI,CACF4H,GAAI,EACJM,GAAI,OACJpG,WAAY,SACZjB,QAAS,eATb,WAYE,SAAC,IAAD,CAAW8G,KAAM,KAZnB,yBAiBL,C,6DC7BKQ,EAAgB,IAAIC,IAE1BD,EAAcE,IAAI,QAAQ,SAAC/F,GAAD,OACxBgG,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,WAAAA,CACEC,OAAO,wBACPC,KAAK,OACLC,OAAQnG,EACRoG,cAAc,QACdC,eAAe,QACfC,YAAY,OARlB,IAaAT,EAAcE,IAAI,WAAW,SAAC/F,GAAD,OAC3BgG,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,UAAAA,CAASC,OAAO,gCAAgCzE,QAAQ,QACxDwE,EAAAA,cAAAA,UAAAA,CACEC,OAAO,gCACPC,KAAK,OACLC,OAAQnG,EACRoG,cAAc,QACdC,eAAe,QACfC,YAAY,OATlB,IAcAT,EAAcE,IAAI,QAAQ,kBACxBC,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,OAAAA,CAAMO,EAAE,8JAFZ,IAMAV,EAAcE,IAAI,SAAS,SAAC/F,GAAD,OACzBgG,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,WAAAA,CACEC,OAAO,wBACPC,KAAK,OACLC,OAAQnG,EACRoG,cAAc,QACdC,eAAe,QACfC,YAAY,OARlB,IAaAT,EAAcE,IAAI,QAAQ,SAAC/F,GAAD,OACxBgG,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,WAAAA,CACEC,OAAO,wBACPC,KAAK,OACLC,OAAQnG,EACRoG,cAAc,QACdC,eAAe,QACfC,YAAY,MARlB,IAaAT,EAAcE,IAAI,WAAW,SAAC/F,GAAD,OAC3BgG,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,WAAAA,CACEC,OAAO,wBACPC,KAAK,OACLC,OAAQnG,EACRoG,cAAc,QACdC,eAAe,QACfC,YAAY,OARlB,IAaA,IAAME,EAA6B,SAACC,EAAoBzG,GAArB,OACjC0G,EAAAA,EAAAA,GAAoBD,EAAQzG,EAAO6F,EADrC,EAGMc,GAAYrJ,EAAAA,EAAAA,aAAqC,SAACsJ,EAAOrJ,GAAR,OACrDyI,EAAAA,cAACa,EAAAA,EAADb,OAAAA,OAAAA,CAAUzI,IAAKA,GAASqJ,EAAAA,CAAOJ,WAAYA,IADjB,IAI5BG,EAAUG,YAAc,Y","sources":["components/hook-form/FormProvider.js","components/Image/Image.js","components/upload/preview/AvatarPreview.js","components/upload/UploadAvatar.js","components/hook-form/RHFUpload.js","components/hook-form/RHFTextField.js","sections/auth/NewPasswordForm.js","pages/auth/NewPassword.js","../node_modules/phosphor-react/src/icons/CaretLeft.tsx"],"sourcesContent":["import PropTypes from 'prop-types';\n// form\nimport { FormProvider as Form } from 'react-hook-form';\n\n// ----------------------------------------------------------------------\n\nFormProvider.propTypes = {\n  children: PropTypes.node,\n  methods: PropTypes.object,\n  onSubmit: PropTypes.func,\n};\n\nexport default function FormProvider({ children, onSubmit, methods }) {\n  return (\n    <Form {...methods}>\n      <form onSubmit={onSubmit}>{children}</form>\n    </Form>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n// @mui\nimport { Box } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst Image = forwardRef(\n  ({ disabledEffect = false, effect = 'blur', sx, ...other }, ref) => {\n    const content = (\n      <Box\n        component={LazyLoadImage}\n        wrapperClassName=\"wrapper\"\n        effect={disabledEffect ? undefined : effect}\n        placeholderSrc={disabledEffect ? '/assets/transparent.png' : '/assets/placeholder.svg'}\n        sx={{ width: 1, height: 1, objectFit: 'cover' }}\n        {...other}\n      />\n    );\n\n    return (\n      <Box\n        ref={ref}\n        component=\"span\"\n        sx={{\n          lineHeight: 1,\n          display: 'block',\n          overflow: 'hidden',\n          position: 'relative',\n          '& .wrapper': {\n            width: 1,\n            height: 1,\n            backgroundSize: 'cover !important',\n          },\n          ...sx,\n        }}\n      >\n        {content}\n      </Box>\n    );\n  }\n);\n\nImage.propTypes = {\n  sx: PropTypes.object,\n  effect: PropTypes.string,\n  disabledEffect: PropTypes.bool,\n};\n\nexport default Image;\n","import PropTypes from 'prop-types';\n//\nimport Image from '../../Image';\n\n// ----------------------------------------------------------------------\n\nAvatarPreview.propTypes = {\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nexport default function AvatarPreview({ file }) {\n  if (!file) {\n    return null;\n  }\n\n  const imgUrl = typeof file === 'string' ? file : file.preview;\n\n  return (\n    <Image\n      alt=\"avatar\"\n      src={imgUrl}\n      sx={{\n        zIndex: 8,\n        overflow: 'hidden',\n        borderRadius: '50%',\n        position: 'absolute',\n        width: `calc(100% - 16px)`,\n        height: `calc(100% - 16px)`,\n      }}\n    />\n  );\n}\n","import PropTypes from \"prop-types\";\nimport { useDropzone } from \"react-dropzone\";\n// @mui\nimport { Typography } from \"@mui/material\";\nimport { styled, alpha } from \"@mui/material/styles\";\n//\nimport AvatarPreview from \"./preview/AvatarPreview\";\nimport { Image } from \"phosphor-react\";\n\n// ----------------------------------------------------------------------\n\nconst StyledDropZone = styled(\"div\")(({ theme }) => ({\n  width: 144,\n  height: 144,\n  margin: \"auto\",\n  display: \"flex\",\n  cursor: \"pointer\",\n  overflow: \"hidden\",\n  borderRadius: \"50%\",\n  alignItems: \"center\",\n  position: \"relative\",\n  justifyContent: \"center\",\n  border: `1px dashed ${alpha(theme.palette.grey[500], 0.32)}`,\n}));\n\nconst StyledPlaceholder = styled(\"div\")(({ theme }) => ({\n  zIndex: 7,\n  display: \"flex\",\n  borderRadius: \"50%\",\n  position: \"absolute\",\n  alignItems: \"center\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  width: `calc(100% - 16px)`,\n  height: `calc(100% - 16px)`,\n  color: theme.palette.text.disabled,\n  backgroundColor: theme.palette.background.neutral,\n  transition: theme.transitions.create(\"opacity\", {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter,\n  }),\n}));\n\n// ----------------------------------------------------------------------\n\nUploadAvatar.propTypes = {\n  sx: PropTypes.object,\n  error: PropTypes.bool,\n  disabled: PropTypes.bool,\n  helperText: PropTypes.node,\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nexport default function UploadAvatar({\n  error,\n  file,\n  disabled,\n  helperText,\n  sx,\n  ...other\n}) {\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragReject,\n  } = useDropzone({\n    multiple: false,\n    disabled,\n    ...other,\n  });\n\n  const hasFile = !!file;\n\n  const isError = isDragReject || !!error;\n\n  return (\n    <>\n      <StyledDropZone\n        {...getRootProps()}\n        sx={{\n          ...(isDragActive && {\n            opacity: 0.72,\n          }),\n          ...(isError && {\n            borderColor: \"error.light\",\n            ...(hasFile && {\n              bgcolor: \"error.lighter\",\n            }),\n          }),\n          ...(disabled && {\n            opacity: 0.48,\n            pointerEvents: \"none\",\n          }),\n          ...(hasFile && {\n            \"&:hover\": {\n              \"& .placeholder\": {\n                opacity: 1,\n              },\n            },\n          }),\n          ...sx,\n        }}\n      >\n        <input {...getInputProps()} />\n\n        {hasFile && <AvatarPreview file={file} />}\n\n        <StyledPlaceholder\n          className=\"placeholder\"\n          sx={{\n            \"&:hover\": {\n              opacity: 0.72,\n            },\n            ...(hasFile && {\n              zIndex: 9,\n              opacity: 0,\n              color: \"common.white\",\n              bgcolor: (theme) => alpha(theme.palette.grey[900], 0.64),\n            }),\n            ...(isError && {\n              color: \"error.main\",\n              bgcolor: \"error.lighter\",\n            }),\n          }}\n        >\n          <Image />\n\n          <Typography variant=\"caption\">\n            {file ? \"Update photo\" : \"Upload photo\"}\n          </Typography>\n        </StyledPlaceholder>\n      </StyledDropZone>\n\n      {helperText && helperText}\n    </>\n  );\n}","import PropTypes from 'prop-types';\n// form\nimport { useFormContext, Controller } from 'react-hook-form';\n// @mui\nimport { FormHelperText } from '@mui/material';\n//\nimport { UploadAvatar } from '../upload';\n\n// ----------------------------------------------------------------------\n\nRHFUploadAvatar.propTypes = {\n  name: PropTypes.string,\n};\n\n// ----------------------------------------------------------------------\n\nexport function RHFUploadAvatar({ name, ...other }) {\n  const { control } = useFormContext();\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field, fieldState: { error } }) => (\n        <div>\n          <UploadAvatar\n            accept={{\n              'image/*': [],\n            }}\n            error={!!error}\n            file={field.value}\n            {...other}\n          />\n\n          {!!error && (\n            <FormHelperText error sx={{ px: 2, textAlign: 'center' }}>\n              {error.message}\n            </FormHelperText>\n          )}\n        </div>\n      )}\n    />\n  );\n}\n\n","import PropTypes from 'prop-types';\n// form\nimport { useFormContext, Controller } from 'react-hook-form';\n// @mui\nimport { TextField } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nRHFTextField.propTypes = {\n  name: PropTypes.string,\n  helperText: PropTypes.node,\n};\n\nexport default function RHFTextField({ name, helperText, ...other }) {\n  const { control } = useFormContext();\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field, fieldState: { error } }) => (\n        <TextField\n          {...field}\n          fullWidth\n          \n          value={typeof field.value === 'number' && field.value === 0 ? '' : field.value}\n          error={!!error}\n          helperText={error ? error?.message : helperText}\n          {...other}\n        />\n      )}\n    />\n  );\n}\n","import { useState } from 'react';\nimport * as Yup from 'yup';\n// form\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n// @mui\nimport { Stack, IconButton, InputAdornment, Button } from '@mui/material';\n// components\nimport FormProvider, { RHFTextField } from '../../components/hook-form';\nimport { Eye, EyeSlash } from 'phosphor-react';\nimport { useSearchParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { NewPassword } from '../../redux/slices/auth';\n\n// ----------------------------------------------------------------------\n\nexport default function NewPasswordForm() {\n  const dispatch = useDispatch();\n  const [queryParameters] = useSearchParams();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const VerifyCodeSchema = Yup.object().shape({\n    \n    password: Yup.string()\n      .min(6, 'Password must be at least 6 characters')\n      .required('Password is required'),\n    passwordConfirm: Yup.string()\n      .required('Confirm password is required')\n      .oneOf([Yup.ref('password'), null], 'Passwords must match'),\n  });\n\n  const defaultValues = {\n    password: '',\n    passwordConfirm: '',\n  };\n\n  const methods = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(VerifyCodeSchema),\n    defaultValues,\n  });\n\n  const {\n    handleSubmit,\n  } = methods;\n\n  const onSubmit = async (data) => {\n    try {\n    //   Send API Request\n    dispatch(NewPassword({...data, token: queryParameters.get('token')}));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n      <Stack spacing={3}>\n        \n\n        <RHFTextField\n          name=\"password\"\n          label=\"Password\"\n          type={showPassword ? 'text' : 'password'}\n          InputProps={{\n            endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    onClick={() => setShowPassword(!showPassword)}\n                    edge=\"end\"\n                  >\n                    {showPassword ? <Eye /> : <EyeSlash />}\n                  </IconButton>\n                </InputAdornment>\n              ),\n          }}\n        />\n\n        <RHFTextField\n          name=\"passwordConfirm\"\n          label=\"Confirm New Password\"\n          type={showPassword ? 'text' : 'password'}\n          InputProps={{\n            endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    onClick={() => setShowPassword(!showPassword)}\n                    edge=\"end\"\n                  >\n                    {showPassword ? <Eye /> : <EyeSlash />}\n                  </IconButton>\n                </InputAdornment>\n              ),\n          }}\n        />\n\n        <Button\n          fullWidth\n          size=\"large\"\n          type=\"submit\"\n          variant=\"contained\"\n          \n          sx={{\n            mt: 3,\n            bgcolor: \"text.primary\",\n            color: (theme) =>\n              theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\n            \"&:hover\": {\n              bgcolor: \"text.primary\",\n              color: (theme) =>\n                theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\n            },\n          }}\n        >\n          Update Password\n        </Button>\n      </Stack>\n    </FormProvider>\n  );\n}\n","import { Stack, Typography, Link } from \"@mui/material\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport React from \"react\";\nimport { CaretLeft } from \"phosphor-react\";\nimport NewPasswordForm from \"../../sections/auth/NewPasswordForm\";\n\nconst NewPassword = () => {\n  return (\n    <>\n      <Stack spacing={2} sx={{ mb: 5, position: \"relative\" }}>\n        <Typography variant=\"h3\" paragraph>\n          Reset Password\n        </Typography>\n\n        <Typography sx={{ color: \"text.secondary\", mb: 5 }}>\n          Please set your new password.\n        </Typography>\n      </Stack>\n\n      {/* NewPasswordForm */}\n\n      <NewPasswordForm />\n\n      <Link\n        component={RouterLink}\n        to={\"/auth/login\"}\n        color=\"inherit\"\n        variant=\"subtitle2\"\n        sx={{\n          mt: 3,\n          mx: \"auto\",\n          alignItems: \"center\",\n          display: \"inline-flex\",\n        }}\n      >\n        <CaretLeft size={24} />\n        Return to sign in\n      </Link>\n    </>\n  );\n};\n\nexport default NewPassword;\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <polygon points=\"160 208 80 128 160 48 160 208\" opacity=\"0.2\" />\n    <polygon\n      points=\"160 208 80 128 160 48 160 208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M163.1,40.6a8.4,8.4,0,0,0-8.8,1.7l-80,80a8.1,8.1,0,0,0,0,11.4l80,80A8.3,8.3,0,0,0,160,216a8.5,8.5,0,0,0,3.1-.6A8,8,0,0,0,168,208V48A8,8,0,0,0,163.1,40.6Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst CaretLeft = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nCaretLeft.displayName = \"CaretLeft\";\n\nexport default CaretLeft;\n"],"names":["FormProvider","children","onSubmit","methods","forwardRef","ref","disabledEffect","effect","sx","other","content","Box","component","LazyLoadImage","wrapperClassName","undefined","placeholderSrc","width","height","objectFit","lineHeight","display","overflow","position","backgroundSize","AvatarPreview","file","imgUrl","preview","alt","src","zIndex","borderRadius","StyledDropZone","styled","theme","margin","cursor","alignItems","justifyContent","border","alpha","palette","grey","StyledPlaceholder","flexDirection","color","text","disabled","backgroundColor","background","neutral","transition","transitions","create","easing","easeInOut","duration","shorter","UploadAvatar","error","helperText","useDropzone","multiple","getRootProps","getInputProps","isDragActive","hasFile","isError","isDragReject","opacity","borderColor","bgcolor","pointerEvents","className","Typography","variant","RHFUploadAvatar","name","control","useFormContext","render","field","fieldState","accept","value","FormHelperText","px","textAlign","message","RHFTextField","TextField","fullWidth","NewPasswordForm","dispatch","useDispatch","useSearchParams","queryParameters","useState","showPassword","setShowPassword","VerifyCodeSchema","Yup","shape","password","min","required","passwordConfirm","oneOf","useForm","mode","resolver","yupResolver","defaultValues","handleSubmit","data","NewPassword","token","get","console","Stack","spacing","label","type","InputProps","endAdornment","InputAdornment","IconButton","onClick","edge","Button","size","mt","mb","paragraph","Link","RouterLink","to","mx","pathsByWeight","Map","set","React","points","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","renderPath","weight","renderPathForWeight","CaretLeft","props","IconBase","displayName"],"sourceRoot":""}