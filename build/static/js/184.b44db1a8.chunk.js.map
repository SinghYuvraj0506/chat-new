{"version":3,"file":"static/js/184.b44db1a8.chunk.js","mappings":"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","sources":["sections/auth/RegisterForm.js","pages/auth/Register.js"],"sourcesContent":["import { useState } from \"react\";\nimport * as Yup from \"yup\";\n// form\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n// @mui\nimport { Link, Stack, Alert, IconButton, InputAdornment } from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\n// components\nimport FormProvider, { RHFTextField } from \"../../components/hook-form\";\nimport { Eye, EyeSlash } from \"phosphor-react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RegisterUser } from \"../../redux/slices/auth\";\n\n// ----------------------------------------------------------------------\n\nexport default function AuthRegisterForm() {\n  const dispatch = useDispatch();\n  const {isLoading} = useSelector((state) => state.auth);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const LoginSchema = Yup.object().shape({\n    firstName: Yup.string().required(\"First name required\"),\n    lastName: Yup.string().required(\"Last name required\"),\n    email: Yup.string()\n      .required(\"Email is required\")\n      .email(\"Email must be a valid email address\"),\n    password: Yup.string().required(\"Password is required\"),\n  });\n\n  const defaultValues = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"demo@tawk.com\",\n    password: \"demo1234\",\n  };\n\n  const methods = useForm({\n    resolver: yupResolver(LoginSchema),\n    defaultValues,\n  });\n\n  const {\n    reset,\n    setError,\n    handleSubmit,\n    formState: { errors },\n  } = methods;\n\n  const onSubmit = async (data) => {\n    try {\n      // submit data to backend\n      dispatch(RegisterUser(data));\n    } catch (error) {\n      console.error(error);\n      reset();\n      setError(\"afterSubmit\", {\n        ...error,\n        message: error.message,\n      });\n    }\n  };\n\n  return (\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n      <Stack spacing={3} mb={4}>\n        {!!errors.afterSubmit && (\n          <Alert severity=\"error\">{errors.afterSubmit.message}</Alert>\n        )}\n\n        <Stack direction={{ xs: \"column\", sm: \"row\" }} spacing={2}>\n          <RHFTextField name=\"firstName\" label=\"First name\" />\n          <RHFTextField name=\"lastName\" label=\"Last name\" />\n        </Stack>\n\n        <RHFTextField name=\"email\" label=\"Email address\" />\n\n        <RHFTextField\n          name=\"password\"\n          label=\"Password\"\n          type={showPassword ? \"text\" : \"password\"}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  onClick={() => setShowPassword(!showPassword)}\n                  edge=\"end\"\n                >\n                  {showPassword ? <Eye /> : <EyeSlash />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n      </Stack>\n\n      <LoadingButton\n        fullWidth\n        color=\"inherit\"\n        size=\"large\"\n        type=\"submit\"\n        variant=\"contained\"\n        loading={isLoading}\n        sx={{\n          bgcolor: \"text.primary\",\n          color: (theme) =>\n            theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\n          \"&:hover\": {\n            bgcolor: \"text.primary\",\n            color: (theme) =>\n              theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\n          },\n        }}\n      >\n        Create Account\n      </LoadingButton>\n    </FormProvider>\n  );\n}\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Stack, Typography, Link } from '@mui/material';\n\nimport RegisterForm from \"../../sections/auth/RegisterForm\";\nimport AuthSocial from '../../sections/auth/AuthSocial';\n\n// ----------------------------------------------------------------------\n\nexport default function Register() {\n  return (\n    <>\n      <Stack spacing={2} sx={{ mb: 5, position: 'relative' }}>\n        <Typography variant=\"h4\">Get started with Chat Fusion.</Typography>\n\n        <Stack direction=\"row\" spacing={0.5}>\n          <Typography variant=\"body2\"> Already have an account? </Typography>\n\n          <Link component={RouterLink} to={\"/auth/login\"} variant=\"subtitle2\">\n            Sign in\n          </Link>\n        </Stack>\n      </Stack>\n      {/* Form */}\n      <RegisterForm  />\n\n      <Typography\n        component=\"div\"\n        sx={{ color: 'text.secondary', mt: 3, typography: 'caption', textAlign: 'center' }}\n      >\n        {'By signing up, I agree to '}\n        <Link underline=\"always\" color=\"text.primary\">\n          Terms of Service\n        </Link>\n        {' and '}\n        <Link underline=\"always\" color=\"text.primary\">\n          Privacy Policy\n        </Link>\n        .\n      </Typography>\n\n     <AuthSocial />\n      </>\n  );\n}\n"],"names":["AuthRegisterForm","dispatch","useDispatch","isLoading","useSelector","state","auth","useState","showPassword","setShowPassword","LoginSchema","Yup","shape","firstName","required","lastName","email","password","methods","useForm","resolver","yupResolver","defaultValues","reset","setError","handleSubmit","errors","formState","onSubmit","data","RegisterUser","error","console","message","Stack","spacing","mb","afterSubmit","Alert","severity","direction","xs","sm","name","label","type","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","edge","LoadingButton","fullWidth","color","size","variant","loading","sx","bgcolor","theme","palette","mode","Register","Typography","Link","component","RouterLink","to","mt","typography","textAlign","underline","AuthSocial"],"sourceRoot":""}