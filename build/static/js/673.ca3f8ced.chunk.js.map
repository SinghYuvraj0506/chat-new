{"version":3,"file":"static/js/673.ca3f8ced.chunk.js","mappings":"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","sources":["components/ChatElement.js","components/Search/Search.js","components/Search/SearchIconWrapper.js","components/Search/StyledInputBase.js","components/hook-form/FormProvider.js","components/Image/Image.js","components/upload/preview/AvatarPreview.js","components/upload/UploadAvatar.js","components/hook-form/RHFUpload.js","components/hook-form/RHFTextField.js","components/hook-form/RHFAutocomplete.js","sections/Dashboard/CreateGroup.js","pages/dashboard/Group.js"],"sourcesContent":["import React from \"react\";\nimport { Box, Badge, Stack, Avatar, Typography } from \"@mui/material\";\nimport { styled, useTheme, alpha } from \"@mui/material/styles\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SelectConversation } from \"../redux/slices/app\";\n\nconst truncateText = (string, n) => {\n  return string?.length > n ? `${string?.slice(0, n)}...` : string;\n};\n\nconst StyledChatBox = styled(Box)(({ theme }) => ({\n  \"&:hover\": {\n    cursor: \"pointer\",\n  },\n}));\n\nconst StyledBadge = styled(Badge)(({ theme }) => ({\n  \"& .MuiBadge-badge\": {\n    backgroundColor: \"#44b700\",\n    color: \"#44b700\",\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n    \"&::after\": {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      borderRadius: \"50%\",\n      animation: \"ripple 1.2s infinite ease-in-out\",\n      border: \"1px solid currentColor\",\n      content: '\"\"',\n    },\n  },\n  \"@keyframes ripple\": {\n    \"0%\": {\n      transform: \"scale(.8)\",\n      opacity: 1,\n    },\n    \"100%\": {\n      transform: \"scale(2.4)\",\n      opacity: 0,\n    },\n  },\n}));\n\nconst ChatElement = ({ img, name, msg, time, unread, online, id }) => {\n  const dispatch = useDispatch();\n  const {room_id} = useSelector((state) => state.app);\n  const selectedChatId = room_id?.toString();\n\n  let isSelected = +selectedChatId === id;\n\n  if (!selectedChatId) {\n    isSelected = false;\n  }\n\n  const theme = useTheme();\n\n  return (\n    <StyledChatBox\n      onClick={() => {\n        dispatch(SelectConversation({room_id: id}));\n      }}\n      sx={{\n        width: \"100%\",\n\n        borderRadius: 1,\n\n        backgroundColor: isSelected\n          ? theme.palette.mode === \"light\"\n            ? alpha(theme.palette.primary.main, 0.5)\n            : theme.palette.primary.main\n          : theme.palette.mode === \"light\"\n          ? \"#fff\"\n          : theme.palette.background.paper,\n      }}\n      p={2}\n    >\n      <Stack\n        direction=\"row\"\n        alignItems={\"center\"}\n        justifyContent=\"space-between\"\n      >\n        <Stack direction=\"row\" spacing={2}>\n          {\" \"}\n          {online ? (\n            <StyledBadge\n              overlap=\"circular\"\n              anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n              variant=\"dot\"\n            >\n              <Avatar alt={name} src={img} />\n            </StyledBadge>\n          ) : (\n            <Avatar alt={name} src={img} />\n          )}\n          <Stack spacing={0.3}>\n            <Typography variant=\"subtitle2\">{name}</Typography>\n            <Typography variant=\"caption\">{truncateText(msg, 20)}</Typography>\n          </Stack>\n        </Stack>\n        <Stack spacing={2} alignItems={\"center\"}>\n          <Typography sx={{ fontWeight: 600 }} variant=\"caption\">\n            {time}\n          </Typography>\n          <Badge\n            className=\"unread-count\"\n            color=\"primary\"\n            badgeContent={unread}\n          />\n        </Stack>\n      </Stack>\n    </StyledChatBox>\n  );\n};\n\nexport default ChatElement;\n","import { styled, alpha } from \"@mui/material/styles\";\n\nconst Search = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: 20,\n  backgroundColor: alpha(theme.palette.background.paper, 1),\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: \"100%\",\n}));\n\nexport default Search;\n","import { styled } from \"@mui/material/styles\";  \n\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  }));\n\n  export default SearchIconWrapper;\n  ","import { InputBase } from \"@mui/material\";\nimport {styled} from \"@mui/material/styles\";\n\n\n  const StyledInputBase = styled(InputBase)(({ theme }) => ({\n    color: \"inherit\",\n    \"& .MuiInputBase-input\": {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n      width: \"100%\",\n    },\n  }));\n\n  export default StyledInputBase;","import PropTypes from 'prop-types';\n// form\nimport { FormProvider as Form } from 'react-hook-form';\n\n// ----------------------------------------------------------------------\n\nFormProvider.propTypes = {\n  children: PropTypes.node,\n  methods: PropTypes.object,\n  onSubmit: PropTypes.func,\n};\n\nexport default function FormProvider({ children, onSubmit, methods }) {\n  return (\n    <Form {...methods}>\n      <form onSubmit={onSubmit}>{children}</form>\n    </Form>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n// @mui\nimport { Box } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst Image = forwardRef(\n  ({ disabledEffect = false, effect = 'blur', sx, ...other }, ref) => {\n    const content = (\n      <Box\n        component={LazyLoadImage}\n        wrapperClassName=\"wrapper\"\n        effect={disabledEffect ? undefined : effect}\n        placeholderSrc={disabledEffect ? '/assets/transparent.png' : '/assets/placeholder.svg'}\n        sx={{ width: 1, height: 1, objectFit: 'cover' }}\n        {...other}\n      />\n    );\n\n    return (\n      <Box\n        ref={ref}\n        component=\"span\"\n        sx={{\n          lineHeight: 1,\n          display: 'block',\n          overflow: 'hidden',\n          position: 'relative',\n          '& .wrapper': {\n            width: 1,\n            height: 1,\n            backgroundSize: 'cover !important',\n          },\n          ...sx,\n        }}\n      >\n        {content}\n      </Box>\n    );\n  }\n);\n\nImage.propTypes = {\n  sx: PropTypes.object,\n  effect: PropTypes.string,\n  disabledEffect: PropTypes.bool,\n};\n\nexport default Image;\n","import PropTypes from 'prop-types';\n//\nimport Image from '../../Image';\n\n// ----------------------------------------------------------------------\n\nAvatarPreview.propTypes = {\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nexport default function AvatarPreview({ file }) {\n  if (!file) {\n    return null;\n  }\n\n  const imgUrl = typeof file === 'string' ? file : file.preview;\n\n  return (\n    <Image\n      alt=\"avatar\"\n      src={imgUrl}\n      sx={{\n        zIndex: 8,\n        overflow: 'hidden',\n        borderRadius: '50%',\n        position: 'absolute',\n        width: `calc(100% - 16px)`,\n        height: `calc(100% - 16px)`,\n      }}\n    />\n  );\n}\n","import PropTypes from \"prop-types\";\nimport { useDropzone } from \"react-dropzone\";\n// @mui\nimport { Typography } from \"@mui/material\";\nimport { styled, alpha } from \"@mui/material/styles\";\n//\nimport AvatarPreview from \"./preview/AvatarPreview\";\nimport { Image } from \"phosphor-react\";\n\n// ----------------------------------------------------------------------\n\nconst StyledDropZone = styled(\"div\")(({ theme }) => ({\n  width: 144,\n  height: 144,\n  margin: \"auto\",\n  display: \"flex\",\n  cursor: \"pointer\",\n  overflow: \"hidden\",\n  borderRadius: \"50%\",\n  alignItems: \"center\",\n  position: \"relative\",\n  justifyContent: \"center\",\n  border: `1px dashed ${alpha(theme.palette.grey[500], 0.32)}`,\n}));\n\nconst StyledPlaceholder = styled(\"div\")(({ theme }) => ({\n  zIndex: 7,\n  display: \"flex\",\n  borderRadius: \"50%\",\n  position: \"absolute\",\n  alignItems: \"center\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  width: `calc(100% - 16px)`,\n  height: `calc(100% - 16px)`,\n  color: theme.palette.text.disabled,\n  backgroundColor: theme.palette.background.neutral,\n  transition: theme.transitions.create(\"opacity\", {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter,\n  }),\n}));\n\n// ----------------------------------------------------------------------\n\nUploadAvatar.propTypes = {\n  sx: PropTypes.object,\n  error: PropTypes.bool,\n  disabled: PropTypes.bool,\n  helperText: PropTypes.node,\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nexport default function UploadAvatar({\n  error,\n  file,\n  disabled,\n  helperText,\n  sx,\n  ...other\n}) {\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragReject,\n  } = useDropzone({\n    multiple: false,\n    disabled,\n    ...other,\n  });\n\n  const hasFile = !!file;\n\n  const isError = isDragReject || !!error;\n\n  return (\n    <>\n      <StyledDropZone\n        {...getRootProps()}\n        sx={{\n          ...(isDragActive && {\n            opacity: 0.72,\n          }),\n          ...(isError && {\n            borderColor: \"error.light\",\n            ...(hasFile && {\n              bgcolor: \"error.lighter\",\n            }),\n          }),\n          ...(disabled && {\n            opacity: 0.48,\n            pointerEvents: \"none\",\n          }),\n          ...(hasFile && {\n            \"&:hover\": {\n              \"& .placeholder\": {\n                opacity: 1,\n              },\n            },\n          }),\n          ...sx,\n        }}\n      >\n        <input {...getInputProps()} />\n\n        {hasFile && <AvatarPreview file={file} />}\n\n        <StyledPlaceholder\n          className=\"placeholder\"\n          sx={{\n            \"&:hover\": {\n              opacity: 0.72,\n            },\n            ...(hasFile && {\n              zIndex: 9,\n              opacity: 0,\n              color: \"common.white\",\n              bgcolor: (theme) => alpha(theme.palette.grey[900], 0.64),\n            }),\n            ...(isError && {\n              color: \"error.main\",\n              bgcolor: \"error.lighter\",\n            }),\n          }}\n        >\n          <Image />\n\n          <Typography variant=\"caption\">\n            {file ? \"Update photo\" : \"Upload photo\"}\n          </Typography>\n        </StyledPlaceholder>\n      </StyledDropZone>\n\n      {helperText && helperText}\n    </>\n  );\n}","import PropTypes from 'prop-types';\n// form\nimport { useFormContext, Controller } from 'react-hook-form';\n// @mui\nimport { FormHelperText } from '@mui/material';\n//\nimport { UploadAvatar } from '../upload';\n\n// ----------------------------------------------------------------------\n\nRHFUploadAvatar.propTypes = {\n  name: PropTypes.string,\n};\n\n// ----------------------------------------------------------------------\n\nexport function RHFUploadAvatar({ name, ...other }) {\n  const { control } = useFormContext();\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field, fieldState: { error } }) => (\n        <div>\n          <UploadAvatar\n            accept={{\n              'image/*': [],\n            }}\n            error={!!error}\n            file={field.value}\n            {...other}\n          />\n\n          {!!error && (\n            <FormHelperText error sx={{ px: 2, textAlign: 'center' }}>\n              {error.message}\n            </FormHelperText>\n          )}\n        </div>\n      )}\n    />\n  );\n}\n\n","import PropTypes from 'prop-types';\n// form\nimport { useFormContext, Controller } from 'react-hook-form';\n// @mui\nimport { TextField } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nRHFTextField.propTypes = {\n  name: PropTypes.string,\n  helperText: PropTypes.node,\n};\n\nexport default function RHFTextField({ name, helperText, ...other }) {\n  const { control } = useFormContext();\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field, fieldState: { error } }) => (\n        <TextField\n          {...field}\n          fullWidth\n          \n          value={typeof field.value === 'number' && field.value === 0 ? '' : field.value}\n          error={!!error}\n          helperText={error ? error?.message : helperText}\n          {...other}\n        />\n      )}\n    />\n  );\n}\n","import PropTypes from 'prop-types';\n// form\nimport { useFormContext, Controller } from 'react-hook-form';\n// @mui\nimport { Autocomplete, TextField } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nRHFAutocomplete.propTypes = {\n  name: PropTypes.string,\n  label: PropTypes.string,\n  helperText: PropTypes.node,\n};\n\nexport default function RHFAutocomplete({ name, label, helperText, ...other }) {\n  const { control, setValue } = useFormContext();\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field, fieldState: { error } }) => (\n        <Autocomplete\n          {...field}\n          onChange={(event, newValue) => setValue(name, newValue, { shouldValidate: true })}\n          renderInput={(params) => (\n            <TextField\n              label={label}\n              error={!!error}\n              helperText={error ? error?.message : helperText}\n              {...params}\n            />\n          )}\n          {...other}\n        />\n      )}\n    />\n  );\n}\n","import React from \"react\";\nimport * as Yup from \"yup\";\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Slide,\n  Stack,\n} from \"@mui/material\";\n\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useForm } from \"react-hook-form\";\nimport FormProvider from \"../../components/hook-form/FormProvider\";\nimport { RHFTextField } from \"../../components/hook-form\";\nimport RHFAutocomplete from \"../../components/hook-form/RHFAutocomplete\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst TAGS_OPTION = [\n  \"Toy Story 3\",\n  \"Logan\",\n  \"Full Metal Jacket\",\n  \"Dangal\",\n  \"The Sting\",\n  \"2001: A Space Odyssey\",\n  \"Singin' in the Rain\",\n  \"Toy Story\",\n  \"Bicycle Thieves\",\n  \"The Kid\",\n  \"Inglourious Basterds\",\n  \"Snatch\",\n  \"3 Idiots\",\n];\n\nconst CreateGroupForm = ({ handleClose }) => {\n  const NewGroupSchema = Yup.object().shape({\n    title: Yup.string().required(\"Title is required\"),\n\n    members: Yup.array().min(2, \"Must have at least 2 members\"),\n  });\n\n  const defaultValues = {\n    title: \"\",\n\n    tags: [],\n  };\n\n  const methods = useForm({\n    resolver: yupResolver(NewGroupSchema),\n    defaultValues,\n  });\n\n  const {\n    reset,\n    watch,\n    setValue,\n    handleSubmit,\n    formState: { isSubmitting, isValid },\n  } = methods;\n\n  const onSubmit = async (data) => {\n    try {\n      //  API Call\n      console.log(\"DATA\", data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n      <Stack spacing={3}>\n        <RHFTextField name=\"title\" label=\"Title\" />\n        <RHFAutocomplete\n          name=\"members\"\n          label=\"Members\"\n          multiple\n          freeSolo\n          options={TAGS_OPTION.map((option) => option)}\n          ChipProps={{ size: \"medium\" }}\n        />\n        <Stack\n          spacing={2}\n          direction={\"row\"}\n          alignItems=\"center\"\n          justifyContent={\"end\"}\n        >\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button type=\"submit\" variant=\"contained\">\n            Create\n          </Button>\n        </Stack>\n      </Stack>\n    </FormProvider>\n  );\n};\n\nconst CreateGroup = ({ open, handleClose }) => {\n  return (\n    <Dialog\n      fullWidth\n      maxWidth=\"xs\"\n      open={open}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleClose}\n      aria-describedby=\"alert-dialog-slide-description\"\n      sx={{ p: 4 }}\n    >\n      <DialogTitle>{\"Create New Group\"}</DialogTitle>\n\n      <DialogContent sx={{ mt: 4 }}>\n        {/* Create Group Form */}\n        <CreateGroupForm handleClose={handleClose} />\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default CreateGroup;\n","import React, { useState } from \"react\";\nimport {\n  Box,\n  Stack,\n  Typography,\n  IconButton,\n  Link,\n  Divider,\n} from \"@mui/material\";\nimport { MagnifyingGlass, Plus } from \"phosphor-react\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { SimpleBarStyle } from \"../../components/Scrollbar\";\nimport { ChatList } from \"../../data\";\nimport ChatElement from \"../../components/ChatElement\";\nimport {\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../components/Search\";\nimport CreateGroup from \"../../sections/Dashboard/CreateGroup\";\n\nconst Group = () => {\n  const [openDialog, setOpenDialog] = useState(false);\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n  const handleOpenDialog = () => {\n    setOpenDialog(true);\n  };\n  const theme = useTheme();\n  return (\n    <>\n      <Stack direction=\"row\" sx={{ width: \"100%\" }}>\n        {/* Left */}\n\n        <Box\n          sx={{\n            overflowY: \"scroll\",\n\n            height: \"100vh\",\n            width: 320,\n            backgroundColor: (theme) =>\n              theme.palette.mode === \"light\"\n                ? \"#F8FAFF\"\n                : theme.palette.background,\n\n            boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\n          }}\n        >\n          <Stack p={3} spacing={2} sx={{ maxHeight: \"100vh\" }}>\n            <Stack\n              alignItems={\"center\"}\n              justifyContent=\"space-between\"\n              direction=\"row\"\n            >\n              <Typography variant=\"h5\">Groups</Typography>\n            </Stack>\n            <Stack sx={{ width: \"100%\" }}>\n              <Search>\n                <SearchIconWrapper>\n                  <MagnifyingGlass color=\"#709CE6\" />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Stack>\n            <Stack\n              justifyContent={\"space-between\"}\n              alignItems={\"center\"}\n              direction={\"row\"}\n            >\n              <Typography variant=\"subtitle2\" sx={{}} component={Link}>\n                Create New Group\n              </Typography>\n              <IconButton onClick={handleOpenDialog}>\n                <Plus style={{ color: theme.palette.primary.main }} />\n              </IconButton>\n            </Stack>\n            <Divider />\n            <Stack sx={{ flexGrow: 1, overflow: \"scroll\", height: \"100%\" }}>\n              <SimpleBarStyle timeout={500} clickOnTrack={false}>\n                <Stack spacing={2.4}>\n                  <Typography variant=\"subtitle2\" sx={{ color: \"#676667\" }}>\n                    Pinned\n                  </Typography>\n                  {/* Chat List */}\n                  {ChatList.filter((el) => el.pinned).map((el, idx) => {\n                    return <ChatElement {...el} />;\n                  })}\n                  <Typography variant=\"subtitle2\" sx={{ color: \"#676667\" }}>\n                    All Chats\n                  </Typography>\n                  {/* Chat List */}\n                  {ChatList.filter((el) => !el.pinned).map((el, idx) => {\n                    return <ChatElement {...el} />;\n                  })}\n                </Stack>\n              </SimpleBarStyle>\n            </Stack>\n          </Stack>\n        </Box>\n\n        {/* Right */}\n      </Stack>\n      {openDialog && (\n        <CreateGroup open={openDialog} handleClose={handleCloseDialog} />\n      )}\n    </>\n  );\n};\n\nexport default Group;\n"],"names":["StyledChatBox","styled","Box","theme","cursor","StyledBadge","Badge","backgroundColor","color","boxShadow","palette","background","paper","position","top","left","width","height","borderRadius","animation","border","content","transform","opacity","img","name","msg","time","unread","online","id","dispatch","useDispatch","room_id","useSelector","state","app","selectedChatId","toString","isSelected","string","n","useTheme","onClick","SelectConversation","sx","mode","alpha","primary","main","p","direction","alignItems","justifyContent","spacing","overlap","anchorOrigin","vertical","horizontal","variant","alt","src","length","slice","fontWeight","className","badgeContent","marginRight","marginLeft","padding","pointerEvents","display","InputBase","paddingLeft","FormProvider","children","onSubmit","methods","forwardRef","ref","disabledEffect","effect","other","component","LazyLoadImage","wrapperClassName","undefined","placeholderSrc","objectFit","lineHeight","overflow","backgroundSize","AvatarPreview","file","imgUrl","preview","zIndex","StyledDropZone","margin","grey","StyledPlaceholder","flexDirection","text","disabled","neutral","transition","transitions","create","easing","easeInOut","duration","shorter","UploadAvatar","error","helperText","useDropzone","multiple","getRootProps","getInputProps","isDragActive","hasFile","isError","isDragReject","borderColor","bgcolor","Typography","RHFUploadAvatar","control","useFormContext","render","field","fieldState","accept","value","FormHelperText","px","textAlign","message","RHFTextField","TextField","fullWidth","RHFAutocomplete","label","setValue","Autocomplete","onChange","event","newValue","shouldValidate","renderInput","params","Transition","React","props","Slide","TAGS_OPTION","CreateGroupForm","handleClose","NewGroupSchema","Yup","shape","title","required","members","min","useForm","resolver","yupResolver","defaultValues","tags","handleSubmit","reset","watch","formState","isSubmitting","isValid","data","console","log","Stack","freeSolo","options","map","option","ChipProps","size","Button","type","open","Dialog","maxWidth","TransitionComponent","keepMounted","onClose","DialogTitle","DialogContent","mt","useState","openDialog","setOpenDialog","overflowY","maxHeight","Search","placeholder","inputProps","Link","IconButton","style","Divider","flexGrow","timeout","clickOnTrack","ChatList","el","pinned","idx","ChatElement"],"sourceRoot":""}